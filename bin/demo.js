// Generated by Haxe 4.0.0 (git build development @ 4aa212701)
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var NestedDataRowType = { __ename__ : true, __constructs__ : ["HeaderRow","GroupRow","CardRow"] };
NestedDataRowType.HeaderRow = function(cells) { var $x = ["HeaderRow",0,cells]; $x.__enum__ = NestedDataRowType; $x.toString = $estr; return $x; };
NestedDataRowType.GroupRow = function(cell) { var $x = ["GroupRow",1,cell]; $x.__enum__ = NestedDataRowType; $x.toString = $estr; return $x; };
NestedDataRowType.CardRow = function(cells) { var $x = ["CardRow",2,cells]; $x.__enum__ = NestedDataRowType; $x.toString = $estr; return $x; };
var DataCell = { __ename__ : true, __constructs__ : ["CTextFold","CText","CInt","CFloat","CLink"] };
DataCell.CTextFold = function(text,onToggle) { var $x = ["CTextFold",0,text,onToggle]; $x.__enum__ = DataCell; $x.toString = $estr; return $x; };
DataCell.CText = function(text) { var $x = ["CText",1,text]; $x.__enum__ = DataCell; $x.toString = $estr; return $x; };
DataCell.CInt = function(num) { var $x = ["CInt",2,num]; $x.__enum__ = DataCell; $x.toString = $estr; return $x; };
DataCell.CFloat = function(num) { var $x = ["CFloat",3,num]; $x.__enum__ = DataCell; $x.toString = $estr; return $x; };
DataCell.CLink = function(label,href) { var $x = ["CLink",4,label,href]; $x.__enum__ = DataCell; $x.toString = $estr; return $x; };
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	var cards = Main.getCards();
	Main.nestedDataRows = Main.createNestedDataRows(cards);
	Main.flatDataRows = Main.createFlatDataRows(cards);
	var elNested = window.document.querySelector(".table-container-nested");
	new fancy_Table(elNested,fancy_FancyTableData.Nested(Main.nestedDataRows.map(Main.nestedDataRowToRowData)),{ fixedTop : 1, fixedLeft : 1, focusOnHover : false, rangeSelectionEnabled : false});
	var elFlat = window.document.querySelector(".table-container-flat");
	var table = new fancy_Table(elFlat,fancy_FancyTableData.Tabular(Main.flatDataRows.map(Main.flatDataRowToCellContents)),{ fixedTop : 1, fixedLeft : 1, selection : { minRow : 1, minCol : 1, maxRow : 2, maxCol : 3}, onKey : function(e) {
		thx_Options.each(e.get_coords(),function(coords) {
			Main.onStartEditingFlatRowCell(coords,e.key.key,e.table);
			return;
		});
	}, onDoubleClick : function(event) {
		Main.onStartEditingFlatRowCell(event.coords,dots_Key.NonPrinting(dots_NonPrinting.F(12)),event.table);
	}, focusOnHover : false, alwaysFocused : true});
};
Main.createNestedDataRows = function(cards) {
	var headerRow = { type : NestedDataRowType.HeaderRow([DataCell.CText("Cards"),DataCell.CText("CMC"),DataCell.CText("Draft value"),DataCell.CText("Price")]), isExpanded : true, childRows : []};
	var bodyRows = Main.createNestedDataRowsUsingGroupBys(cards,[function(card) {
		return card.color;
	},function(card1) {
		return card1.rarity;
	},function(card2) {
		return card2.type;
	},function(card3) {
		return card3.name;
	}]);
	return [headerRow].concat(bodyRows);
};
Main.createNestedDataRowsUsingGroupBys = function(cards,groupBys) {
	return thx_Maps.tuples(thx_Arrays.groupByAppend(cards,groupBys[0],new haxe_ds_StringMap())).map(function(tuple) {
		var groupKey = tuple._0;
		var groupCards = tuple._1;
		var restOfGroupBys = groupBys.slice(1);
		if(restOfGroupBys.length == 0) {
			var card = groupCards[0];
			return { type : NestedDataRowType.CardRow([DataCell.CLink(card.name,"http://gatherer.wizards.com/Pages/Card/Details.aspx?multiverseid=" + card.multiverseId),DataCell.CInt(card.cmc),DataCell.CFloat(card.draftval),DataCell.CFloat(card.tcgprice)]), isExpanded : true, childRows : []};
		} else {
			var row = { type : NestedDataRowType.GroupRow(DataCell.CTextFold(groupKey,function() {
				return row.isExpanded = !row.isExpanded;
			})), isExpanded : true, childRows : Main.createNestedDataRowsUsingGroupBys(groupCards,restOfGroupBys)};
			return row;
		}
	});
};
Main.nestedDataRowToRowData = function(nestedDataRow) {
	var cells;
	var _g = nestedDataRow.type;
	switch(_g[1]) {
	case 0:
		var cells1 = _g[2];
		cells = cells1;
		break;
	case 1:
		var cell = _g[2];
		cells = [cell];
		break;
	case 2:
		var cells2 = _g[2];
		cells = cells2;
		break;
	}
	return { values : cells.map(function(_) {
		return fancy_table_util_CellContentImpl.LazyElement(Main.renderNestedRowDataCell);
	}), data : nestedDataRow.childRows.map(Main.nestedDataRowToRowData), meta : { expanded : nestedDataRow.isExpanded}};
};
Main.flattenNestedDataRows = function(nestedDataRows) {
	return thx_Arrays.reduce(nestedDataRows,function(acc,row) {
		acc.push(row);
		if(row.isExpanded) {
			acc = acc.concat(Main.flattenNestedDataRows(row.childRows));
		}
		return acc;
	},[]);
};
Main.getNestedRowCellByCoords = function(row,col) {
	var flattenedNestedDataRows = Main.flattenNestedDataRows(Main.nestedDataRows);
	return thx_Options.flatMap(thx_Arrays.getOption(flattenedNestedDataRows,row),function(row1) {
		var _g = row1.type;
		var tmp;
		switch(_g[1]) {
		case 0:
			var cells = _g[2];
			tmp = cells;
			break;
		case 1:
			var cell = _g[2];
			tmp = [cell];
			break;
		case 2:
			var cells1 = _g[2];
			tmp = cells1;
			break;
		}
		return thx_Options.map(thx_Arrays.getOption(tmp,col),function(cell1) {
			return { row : row1, cell : cell1};
		});
	});
};
Main.renderNestedRowDataCell = function(table,row,col) {
	return thx_Options.cataf(Main.getNestedRowCellByCoords(row,col),function() {
		return Main.renderUnknownCell(row,col);
	},function(data) {
		return Main.renderDataCell({ row : row, col : col, cell : data.cell, table : table});
	});
};
Main.createFlatDataRows = function(cards) {
	var headerRow = { cells : [DataCell.CText("Cards"),DataCell.CText("CMC"),DataCell.CText("Color"),DataCell.CText("Type"),DataCell.CText("Rarity"),DataCell.CText("Draft value"),DataCell.CText("Price")]};
	var bodyRows = cards.map(function(card) {
		return { cells : [DataCell.CLink(card.name,"http://gatherer.wizards.com/Pages/Card/Details.aspx?multiverseid=" + card.multiverseId),DataCell.CInt(card.cmc),DataCell.CText(card.color),DataCell.CText(card.type),DataCell.CText(card.rarity),DataCell.CFloat(card.draftval),DataCell.CFloat(card.tcgprice)]};
	});
	return [headerRow].concat(bodyRows);
};
Main.flatDataRowToCellContents = function(flatDataRow) {
	return flatDataRow.cells.map(function(_) {
		return fancy_table_util_CellContentImpl.LazyElement(Main.renderFlatRowDataCell);
	});
};
Main.renderFlatRowDataCell = function(table,row,col) {
	return thx_Options.cataf(Main.getFlatRowCellByCoords(row,col),function() {
		return Main.renderUnknownCell(row,col);
	},function(rowCell) {
		return Main.renderDataCell({ row : row, col : col, cell : rowCell.cell, table : table});
	});
};
Main.getFlatRowCellByCoords = function(row,col) {
	return thx_Options.flatMap(thx_Arrays.getOption(Main.flatDataRows,row),function(row1) {
		return thx_Options.map(thx_Arrays.getOption(row1.cells,col),function(cell) {
			return { row : row1, cell : cell};
		});
	});
};
Main.setFlatRowCellByCoords = function(row,col,cell) {
	thx_Options.each(thx_Arrays.getOption(Main.flatDataRows,row),function(row1) {
		return row1.cells[col] = cell;
	});
};
Main.renderUnknownCell = function(row,col) {
	var doc = null;
	if(null == doc) {
		doc = window.document;
	}
	var el = doc.createElement("div");
	var _g = 0;
	var _g1 = [];
	while(_g < _g1.length) {
		var o = _g1[_g];
		++_g;
		el.setAttribute(o.name,o.value);
	}
	var attrs = null;
	if(null != attrs) {
		var attr = attrs.keys();
		while(attr.hasNext()) {
			var attr1 = attr.next();
			el.setAttribute(attr1,__map_reserved[attr1] != null ? attrs.getReserved(attr1) : attrs.h[attr1]);
		}
	}
	var children = null;
	if(null != children) {
		var _g2 = 0;
		while(_g2 < children.length) {
			var child = children[_g2];
			++_g2;
			el.appendChild(child);
		}
	}
	var textContent = "cell not found: " + row + " " + col;
	if(null != textContent) {
		el.appendChild(doc.createTextNode(textContent));
	}
	return el;
};
Main.renderDataCell = function(options) {
	var children;
	var _g = options.cell;
	switch(_g[1]) {
	case 0:
		var text = _g[2];
		var doc = null;
		if(null == doc) {
			doc = window.document;
		}
		var el = doc.createElement("span");
		var _g1 = 0;
		var _g11 = [];
		while(_g1 < _g11.length) {
			var o = _g11[_g1];
			++_g1;
			el.setAttribute(o.name,o.value);
		}
		var attrs = null;
		if(null != attrs) {
			var attr = attrs.keys();
			while(attr.hasNext()) {
				var attr1 = attr.next();
				el.setAttribute(attr1,__map_reserved[attr1] != null ? attrs.getReserved(attr1) : attrs.h[attr1]);
			}
		}
		var children1 = null;
		if(null != children1) {
			var _g2 = 0;
			while(_g2 < children1.length) {
				var child = children1[_g2];
				++_g2;
				el.appendChild(child);
			}
		}
		var textContent = text;
		if(null != textContent) {
			el.appendChild(doc.createTextNode(textContent));
		}
		children = [el];
		break;
	case 1:
		var text1 = _g[2];
		var doc1 = null;
		if(null == doc1) {
			doc1 = window.document;
		}
		var el1 = doc1.createElement("span");
		var _g3 = 0;
		var _g12 = [];
		while(_g3 < _g12.length) {
			var o1 = _g12[_g3];
			++_g3;
			el1.setAttribute(o1.name,o1.value);
		}
		var attrs1 = null;
		if(null != attrs1) {
			var attr2 = attrs1.keys();
			while(attr2.hasNext()) {
				var attr3 = attr2.next();
				el1.setAttribute(attr3,__map_reserved[attr3] != null ? attrs1.getReserved(attr3) : attrs1.h[attr3]);
			}
		}
		var children2 = null;
		if(null != children2) {
			var _g4 = 0;
			while(_g4 < children2.length) {
				var child1 = children2[_g4];
				++_g4;
				el1.appendChild(child1);
			}
		}
		var textContent1 = text1;
		if(null != textContent1) {
			el1.appendChild(doc1.createTextNode(textContent1));
		}
		children = [el1];
		break;
	case 2:
		var num = _g[2];
		var doc2 = null;
		if(null == doc2) {
			doc2 = window.document;
		}
		var el2 = doc2.createElement("span");
		var _g5 = 0;
		var _g13 = [];
		while(_g5 < _g13.length) {
			var o2 = _g13[_g5];
			++_g5;
			el2.setAttribute(o2.name,o2.value);
		}
		var attrs2 = null;
		if(null != attrs2) {
			var attr4 = attrs2.keys();
			while(attr4.hasNext()) {
				var attr5 = attr4.next();
				el2.setAttribute(attr5,__map_reserved[attr5] != null ? attrs2.getReserved(attr5) : attrs2.h[attr5]);
			}
		}
		var children3 = null;
		if(null != children3) {
			var _g6 = 0;
			while(_g6 < children3.length) {
				var child2 = children3[_g6];
				++_g6;
				el2.appendChild(child2);
			}
		}
		var textContent2 = num == null ? "null" : "" + num;
		if(null != textContent2) {
			el2.appendChild(doc2.createTextNode(textContent2));
		}
		children = [el2];
		break;
	case 3:
		var num1 = _g[2];
		var doc3 = null;
		if(null == doc3) {
			doc3 = window.document;
		}
		var el3 = doc3.createElement("span");
		var _g7 = 0;
		var _g14 = [];
		while(_g7 < _g14.length) {
			var o3 = _g14[_g7];
			++_g7;
			el3.setAttribute(o3.name,o3.value);
		}
		var attrs3 = null;
		if(null != attrs3) {
			var attr6 = attrs3.keys();
			while(attr6.hasNext()) {
				var attr7 = attr6.next();
				el3.setAttribute(attr7,__map_reserved[attr7] != null ? attrs3.getReserved(attr7) : attrs3.h[attr7]);
			}
		}
		var children4 = null;
		if(null != children4) {
			var _g8 = 0;
			while(_g8 < children4.length) {
				var child3 = children4[_g8];
				++_g8;
				el3.appendChild(child3);
			}
		}
		var textContent3 = num1 == null ? "null" : "" + num1;
		if(null != textContent3) {
			el3.appendChild(doc3.createTextNode(textContent3));
		}
		children = [el3];
		break;
	case 4:
		var href = _g[3];
		var label = _g[2];
		var doc4 = null;
		if(null == doc4) {
			doc4 = window.document;
		}
		var el4 = doc4.createElement("span");
		var _g9 = 0;
		var _g15 = [];
		while(_g9 < _g15.length) {
			var o4 = _g15[_g9];
			++_g9;
			el4.setAttribute(o4.name,o4.value);
		}
		var attrs4 = null;
		if(null != attrs4) {
			var attr8 = attrs4.keys();
			while(attr8.hasNext()) {
				var attr9 = attr8.next();
				el4.setAttribute(attr9,__map_reserved[attr9] != null ? attrs4.getReserved(attr9) : attrs4.h[attr9]);
			}
		}
		var children5 = null;
		if(null != children5) {
			var _g10 = 0;
			while(_g10 < children5.length) {
				var child4 = children5[_g10];
				++_g10;
				el4.appendChild(child4);
			}
		}
		var textContent4 = label;
		if(null != textContent4) {
			el4.appendChild(doc4.createTextNode(textContent4));
		}
		var children6 = el4;
		var doc5 = null;
		if(null == doc5) {
			doc5 = window.document;
		}
		var el5 = doc5.createElement("a");
		var _g16 = 0;
		var _g21 = [];
		while(_g16 < _g21.length) {
			var o5 = _g21[_g16];
			++_g16;
			el5.setAttribute(o5.name,o5.value);
		}
		var _g17 = new haxe_ds_StringMap();
		if(__map_reserved["href"] != null) {
			_g17.setReserved("href",href);
		} else {
			_g17.h["href"] = href;
		}
		if(__map_reserved["target"] != null) {
			_g17.setReserved("target","_blank");
		} else {
			_g17.h["target"] = "_blank";
		}
		var attrs5 = _g17;
		if(null != attrs5) {
			var attr10 = attrs5.keys();
			while(attr10.hasNext()) {
				var attr11 = attr10.next();
				el5.setAttribute(attr11,__map_reserved[attr11] != null ? attrs5.getReserved(attr11) : attrs5.h[attr11]);
			}
		}
		var doc6 = null;
		if(null == doc6) {
			doc6 = window.document;
		}
		var el6 = doc6.createElement("i");
		var _g22 = 0;
		var _g31 = [{ value : "fa fa-external-link-square", name : "class"}];
		while(_g22 < _g31.length) {
			var o6 = _g31[_g22];
			++_g22;
			el6.setAttribute(o6.name,o6.value);
		}
		var attrs6 = null;
		if(null != attrs6) {
			var attr12 = attrs6.keys();
			while(attr12.hasNext()) {
				var attr13 = attr12.next();
				el6.setAttribute(attr13,__map_reserved[attr13] != null ? attrs6.getReserved(attr13) : attrs6.h[attr13]);
			}
		}
		var children7 = null;
		if(null != children7) {
			var _g23 = 0;
			while(_g23 < children7.length) {
				var child5 = children7[_g23];
				++_g23;
				el6.appendChild(child5);
			}
		}
		var textContent5 = null;
		if(null != textContent5) {
			el6.appendChild(doc6.createTextNode(textContent5));
		}
		var children8 = [el6];
		if(null != children8) {
			var _g24 = 0;
			while(_g24 < children8.length) {
				var child6 = children8[_g24];
				++_g24;
				el5.appendChild(child6);
			}
		}
		var textContent6 = null;
		if(null != textContent6) {
			el5.appendChild(doc5.createTextNode(textContent6));
		}
		children = [children6,el5];
		break;
	}
	var doc7 = null;
	if(null == doc7) {
		doc7 = window.document;
	}
	var el7 = doc7.createElement("div");
	var _g18 = 0;
	var _g25 = [{ value : "ft-cell-content", name : "class"}];
	while(_g18 < _g25.length) {
		var o7 = _g25[_g18];
		++_g18;
		el7.setAttribute(o7.name,o7.value);
	}
	var attrs7 = null;
	if(null != attrs7) {
		var attr14 = attrs7.keys();
		while(attr14.hasNext()) {
			var attr15 = attr14.next();
			el7.setAttribute(attr15,__map_reserved[attr15] != null ? attrs7.getReserved(attr15) : attrs7.h[attr15]);
		}
	}
	var children9 = children;
	if(null != children9) {
		var _g19 = 0;
		while(_g19 < children9.length) {
			var child7 = children9[_g19];
			++_g19;
			el7.appendChild(child7);
		}
	}
	var textContent7 = null;
	if(null != textContent7) {
		el7.appendChild(doc7.createTextNode(textContent7));
	}
	var element = el7;
	var _g110 = options.cell;
	if(_g110[1] == 0) {
		var onToggle = _g110[3];
		element.addEventListener("click",function(e) {
			onToggle();
			options.table.toggleRow(options.row);
		});
	}
	return element;
};
Main.onStartEditingFlatRowCell = function(coords,typed,table) {
	var value = thx_Options.getOrElse(thx_Options.map(Main.getFlatRowCellByCoords(coords.get_row(),coords.get_col()),function(data) {
		var _g = data.cell;
		switch(_g[1]) {
		case 0:
			var text = _g[2];
			return text;
		case 1:
			var text1 = _g[2];
			return text1;
		case 2:
			var n = _g[2];
			if(n == null) {
				return "null";
			} else {
				return "" + n;
			}
			break;
		case 3:
			var n1 = _g[2];
			if(n1 == null) {
				return "null";
			} else {
				return "" + n1;
			}
			break;
		case 4:
			var href = _g[3];
			var text2 = _g[2];
			return text2;
		}
	}),"");
	var input = window.document.createElement("input");
	input.value = "";
	switch(typed[1]) {
	case 0:
		var $char = typed[2];
		input.value = String.fromCharCode($char);
		break;
	case 2:
		if(typed[2][1] == 11) {
			if(typed[2][2] == 12) {
				input.value = value;
			} else {
				return;
			}
		} else {
			return;
		}
		break;
	default:
		return;
	}
	thx_Timer.delay($bind(input,input.focus),10);
	input.onkeydown = function(e) {
		e.stopPropagation();
	};
	input.onkeyup = function(e1) {
		e1.stopPropagation();
		Main.setFlatRowCellByCoords(coords.get_row(),coords.get_col(),DataCell.CText(input.value));
		if(e1.key == "Enter") {
			var tmp = coords.get_row();
			var tmp1 = coords.get_col();
			table.renderCell(tmp,tmp1,fancy_table_util_CellContentImpl.LazyElement(Main.renderFlatRowDataCell));
		}
	};
	input.onblur = function(e2) {
		e2.stopPropagation();
		Main.setFlatRowCellByCoords(coords.get_row(),coords.get_col(),DataCell.CText(input.value));
		var tmp2 = coords.get_row();
		var tmp3 = coords.get_col();
		table.renderCell(tmp2,tmp3,fancy_table_util_CellContentImpl.LazyElement(Main.renderFlatRowDataCell));
	};
	var tmp4 = coords.get_row();
	var tmp5 = coords.get_col();
	table.renderCell(tmp4,tmp5,fancy_table_util_CellContentImpl.Element(input));
};
Main.getCards = function() {
	return [{ name : "Quarantine Field", color : "White", type : "Enchantment", rarity : "Mythic", multiverseId : "402001", cmc : 2, draftval : 5, tcgprice : 2.52},{ name : "Hero of Goma Fada", color : "White", type : "Creature", rarity : "Rare", multiverseId : "401913", cmc : 5, draftval : 3.5, tcgprice : 0.25},{ name : "Felidar Sovereign", color : "White", type : "Creature", rarity : "Rare", multiverseId : "401878", cmc : 6, draftval : 4, tcgprice : 0.56},{ name : "Part the Waterveil", color : "Blue", type : "Sorcery", rarity : "Mythic", multiverseId : "401982", cmc : 6, draftval : 2.0, tcgprice : 1.29},{ name : "Guardian of Tazeem", color : "Blue", type : "Creature", rarity : "Rare", multiverseId : "401906", cmc : 5, draftval : 4.5, tcgprice : 0.25},{ name : "Quarantine Field", color : "White", type : "Enchantment", rarity : "Mythic", multiverseId : "402001", cmc : 2, draftval : 5, tcgprice : 2.52},{ name : "Hero of Goma Fada", color : "White", type : "Creature", rarity : "Rare", multiverseId : "401913", cmc : 5, draftval : 3.5, tcgprice : 0.25},{ name : "Felidar Sovereign", color : "White", type : "Creature", rarity : "Rare", multiverseId : "401878", cmc : 6, draftval : 4, tcgprice : 0.56},{ name : "Part the Waterveil", color : "Blue", type : "Sorcery", rarity : "Mythic", multiverseId : "401982", cmc : 6, draftval : 2.0, tcgprice : 1.29},{ name : "Guardian of Tazeem", color : "Blue", type : "Creature", rarity : "Rare", multiverseId : "401906", cmc : 5, draftval : 4.5, tcgprice : 0.25},{ name : "Quarantine Field", color : "White", type : "Enchantment", rarity : "Mythic", multiverseId : "402001", cmc : 2, draftval : 5, tcgprice : 2.52},{ name : "Hero of Goma Fada", color : "White", type : "Creature", rarity : "Rare", multiverseId : "401913", cmc : 5, draftval : 3.5, tcgprice : 0.25},{ name : "Felidar Sovereign", color : "White", type : "Creature", rarity : "Rare", multiverseId : "401878", cmc : 6, draftval : 4, tcgprice : 0.56},{ name : "Part the Waterveil", color : "Blue", type : "Sorcery", rarity : "Mythic", multiverseId : "401982", cmc : 6, draftval : 2.0, tcgprice : 1.29},{ name : "Guardian of Tazeem", color : "Blue", type : "Creature", rarity : "Rare", multiverseId : "401906", cmc : 5, draftval : 4.5, tcgprice : 0.25},{ name : "Quarantine Field", color : "White", type : "Enchantment", rarity : "Mythic", multiverseId : "402001", cmc : 2, draftval : 5, tcgprice : 2.52},{ name : "Hero of Goma Fada", color : "White", type : "Creature", rarity : "Rare", multiverseId : "401913", cmc : 5, draftval : 3.5, tcgprice : 0.25},{ name : "Felidar Sovereign", color : "White", type : "Creature", rarity : "Rare", multiverseId : "401878", cmc : 6, draftval : 4, tcgprice : 0.56},{ name : "Part the Waterveil", color : "Blue", type : "Sorcery", rarity : "Mythic", multiverseId : "401982", cmc : 6, draftval : 2.0, tcgprice : 1.29},{ name : "Guardian of Tazeem", color : "Blue", type : "Creature", rarity : "Rare", multiverseId : "401906", cmc : 5, draftval : 4.5, tcgprice : 0.25}];
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = true;
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
var dots_Dom = function() { };
dots_Dom.__name__ = true;
dots_Dom.toggleClass = function(el,className,condition) {
	if(null == condition) {
		condition = !el.classList.contains(className);
	}
	if(condition) {
		el.classList.add(className);
	} else {
		el.classList.remove(className);
	}
};
dots_Dom.appendChild = function(el,child) {
	el.appendChild(child);
	return el;
};
dots_Dom.appendChildren = function(el,children) {
	return thx_Arrays.reduce(children,dots_Dom.appendChild,el);
};
dots_Dom.append = function(el,child,children) {
	if(child != null) {
		dots_Dom.appendChild(el,child);
	}
	if(children != null && children.length > 0) {
		dots_Dom.appendChildren(el,children);
	}
	return el;
};
dots_Dom.empty = function(el) {
	try {
		while(el.firstChild != null) el.removeChild(el.firstChild);
	} catch( e ) {
		haxe_CallStack.lastException = e;
		el.innerHTML = "";
	}
	return el;
};
dots_Dom.getOuterHeight = function(el) {
	return el.getBoundingClientRect().height;
};
dots_Dom.getOuterWidth = function(el) {
	return el.getBoundingClientRect().width;
};
var dots_Key = { __ename__ : true, __constructs__ : ["Printing","NamedPrinting","NonPrinting","Unknown"] };
dots_Key.Printing = function($char,isNumPad) { var $x = ["Printing",0,$char,isNumPad]; $x.__enum__ = dots_Key; $x.toString = $estr; return $x; };
dots_Key.NamedPrinting = function(namedChar) { var $x = ["NamedPrinting",1,namedChar]; $x.__enum__ = dots_Key; $x.toString = $estr; return $x; };
dots_Key.NonPrinting = function(key) { var $x = ["NonPrinting",2,key]; $x.__enum__ = dots_Key; $x.toString = $estr; return $x; };
dots_Key.Unknown = function(key,code,keyCode,which) { var $x = ["Unknown",3,key,code,keyCode,which]; $x.__enum__ = dots_Key; $x.toString = $estr; return $x; };
var dots_NamedCharacter = { __ename__ : true, __constructs__ : ["Multiply","Add","Subtract","DecimalPoint","Divide","Tab","Enter","Backspace","Delete"] };
dots_NamedCharacter.Multiply = ["Multiply",0];
dots_NamedCharacter.Multiply.toString = $estr;
dots_NamedCharacter.Multiply.__enum__ = dots_NamedCharacter;
dots_NamedCharacter.Add = ["Add",1];
dots_NamedCharacter.Add.toString = $estr;
dots_NamedCharacter.Add.__enum__ = dots_NamedCharacter;
dots_NamedCharacter.Subtract = ["Subtract",2];
dots_NamedCharacter.Subtract.toString = $estr;
dots_NamedCharacter.Subtract.__enum__ = dots_NamedCharacter;
dots_NamedCharacter.DecimalPoint = ["DecimalPoint",3];
dots_NamedCharacter.DecimalPoint.toString = $estr;
dots_NamedCharacter.DecimalPoint.__enum__ = dots_NamedCharacter;
dots_NamedCharacter.Divide = ["Divide",4];
dots_NamedCharacter.Divide.toString = $estr;
dots_NamedCharacter.Divide.__enum__ = dots_NamedCharacter;
dots_NamedCharacter.Tab = ["Tab",5];
dots_NamedCharacter.Tab.toString = $estr;
dots_NamedCharacter.Tab.__enum__ = dots_NamedCharacter;
dots_NamedCharacter.Enter = ["Enter",6];
dots_NamedCharacter.Enter.toString = $estr;
dots_NamedCharacter.Enter.__enum__ = dots_NamedCharacter;
dots_NamedCharacter.Backspace = ["Backspace",7];
dots_NamedCharacter.Backspace.toString = $estr;
dots_NamedCharacter.Backspace.__enum__ = dots_NamedCharacter;
dots_NamedCharacter.Delete = ["Delete",8];
dots_NamedCharacter.Delete.toString = $estr;
dots_NamedCharacter.Delete.__enum__ = dots_NamedCharacter;
var dots_IsNumpad = { __ename__ : true, __constructs__ : ["Numpad","NotNumpad","Unknown"] };
dots_IsNumpad.Numpad = ["Numpad",0];
dots_IsNumpad.Numpad.toString = $estr;
dots_IsNumpad.Numpad.__enum__ = dots_IsNumpad;
dots_IsNumpad.NotNumpad = ["NotNumpad",1];
dots_IsNumpad.NotNumpad.toString = $estr;
dots_IsNumpad.NotNumpad.__enum__ = dots_IsNumpad;
dots_IsNumpad.Unknown = ["Unknown",2];
dots_IsNumpad.Unknown.toString = $estr;
dots_IsNumpad.Unknown.__enum__ = dots_IsNumpad;
var dots_MetaOrOS = { __ename__ : true, __constructs__ : ["Meta","OS"] };
dots_MetaOrOS.Meta = ["Meta",0];
dots_MetaOrOS.Meta.toString = $estr;
dots_MetaOrOS.Meta.__enum__ = dots_MetaOrOS;
dots_MetaOrOS.OS = ["OS",1];
dots_MetaOrOS.OS.toString = $estr;
dots_MetaOrOS.OS.__enum__ = dots_MetaOrOS;
var dots_LeftOrRight = { __ename__ : true, __constructs__ : ["Left","Right","NA","Unknown"] };
dots_LeftOrRight.Left = ["Left",0];
dots_LeftOrRight.Left.toString = $estr;
dots_LeftOrRight.Left.__enum__ = dots_LeftOrRight;
dots_LeftOrRight.Right = ["Right",1];
dots_LeftOrRight.Right.toString = $estr;
dots_LeftOrRight.Right.__enum__ = dots_LeftOrRight;
dots_LeftOrRight.NA = ["NA",2];
dots_LeftOrRight.NA.toString = $estr;
dots_LeftOrRight.NA.__enum__ = dots_LeftOrRight;
dots_LeftOrRight.Unknown = ["Unknown",3];
dots_LeftOrRight.Unknown.toString = $estr;
dots_LeftOrRight.Unknown.__enum__ = dots_LeftOrRight;
var dots_NonPrinting = { __ename__ : true, __constructs__ : ["Break","Escape","PageUp","PageDown","End","Home","LeftArrow","UpArrow","RightArrow","DownArrow","Insert","F","Select","ContextMenu","NumLock","Modifier"] };
dots_NonPrinting.Break = ["Break",0];
dots_NonPrinting.Break.toString = $estr;
dots_NonPrinting.Break.__enum__ = dots_NonPrinting;
dots_NonPrinting.Escape = ["Escape",1];
dots_NonPrinting.Escape.toString = $estr;
dots_NonPrinting.Escape.__enum__ = dots_NonPrinting;
dots_NonPrinting.PageUp = ["PageUp",2];
dots_NonPrinting.PageUp.toString = $estr;
dots_NonPrinting.PageUp.__enum__ = dots_NonPrinting;
dots_NonPrinting.PageDown = ["PageDown",3];
dots_NonPrinting.PageDown.toString = $estr;
dots_NonPrinting.PageDown.__enum__ = dots_NonPrinting;
dots_NonPrinting.End = ["End",4];
dots_NonPrinting.End.toString = $estr;
dots_NonPrinting.End.__enum__ = dots_NonPrinting;
dots_NonPrinting.Home = ["Home",5];
dots_NonPrinting.Home.toString = $estr;
dots_NonPrinting.Home.__enum__ = dots_NonPrinting;
dots_NonPrinting.LeftArrow = ["LeftArrow",6];
dots_NonPrinting.LeftArrow.toString = $estr;
dots_NonPrinting.LeftArrow.__enum__ = dots_NonPrinting;
dots_NonPrinting.UpArrow = ["UpArrow",7];
dots_NonPrinting.UpArrow.toString = $estr;
dots_NonPrinting.UpArrow.__enum__ = dots_NonPrinting;
dots_NonPrinting.RightArrow = ["RightArrow",8];
dots_NonPrinting.RightArrow.toString = $estr;
dots_NonPrinting.RightArrow.__enum__ = dots_NonPrinting;
dots_NonPrinting.DownArrow = ["DownArrow",9];
dots_NonPrinting.DownArrow.toString = $estr;
dots_NonPrinting.DownArrow.__enum__ = dots_NonPrinting;
dots_NonPrinting.Insert = ["Insert",10];
dots_NonPrinting.Insert.toString = $estr;
dots_NonPrinting.Insert.__enum__ = dots_NonPrinting;
dots_NonPrinting.F = function(number) { var $x = ["F",11,number]; $x.__enum__ = dots_NonPrinting; $x.toString = $estr; return $x; };
dots_NonPrinting.Select = ["Select",12];
dots_NonPrinting.Select.toString = $estr;
dots_NonPrinting.Select.__enum__ = dots_NonPrinting;
dots_NonPrinting.ContextMenu = ["ContextMenu",13];
dots_NonPrinting.ContextMenu.toString = $estr;
dots_NonPrinting.ContextMenu.__enum__ = dots_NonPrinting;
dots_NonPrinting.NumLock = ["NumLock",14];
dots_NonPrinting.NumLock.toString = $estr;
dots_NonPrinting.NumLock.__enum__ = dots_NonPrinting;
dots_NonPrinting.Modifier = function(mod,leftOrRight) { var $x = ["Modifier",15,mod,leftOrRight]; $x.__enum__ = dots_NonPrinting; $x.toString = $estr; return $x; };
var dots_Modifier = { __ename__ : true, __constructs__ : ["Alt","CapsLock","Control","MetaOrOS","ScrollLock","Shift"] };
dots_Modifier.Alt = ["Alt",0];
dots_Modifier.Alt.toString = $estr;
dots_Modifier.Alt.__enum__ = dots_Modifier;
dots_Modifier.CapsLock = ["CapsLock",1];
dots_Modifier.CapsLock.toString = $estr;
dots_Modifier.CapsLock.__enum__ = dots_Modifier;
dots_Modifier.Control = ["Control",2];
dots_Modifier.Control.toString = $estr;
dots_Modifier.Control.__enum__ = dots_Modifier;
dots_Modifier.MetaOrOS = function(which) { var $x = ["MetaOrOS",3,which]; $x.__enum__ = dots_Modifier; $x.toString = $estr; return $x; };
dots_Modifier.ScrollLock = ["ScrollLock",4];
dots_Modifier.ScrollLock.toString = $estr;
dots_Modifier.ScrollLock.__enum__ = dots_Modifier;
dots_Modifier.Shift = ["Shift",5];
dots_Modifier.Shift.toString = $estr;
dots_Modifier.Shift.__enum__ = dots_Modifier;
var dots_Keys = function() { };
dots_Keys.__name__ = true;
dots_Keys.getKeyAndModifiers = function(evt) {
	return { key : dots_Keys.getKey(evt), modifiers : dots_Keys.getModifiers(evt)};
};
dots_Keys.getKey = function(evt) {
	var evtCode = evt.code;
	var value = evt.key;
	var code = null == evtCode ? haxe_ds_Option.None : haxe_ds_Option.Some(evtCode);
	var tmp = thx_Options.flatMap(null == value ? haxe_ds_Option.None : haxe_ds_Option.Some(value),function(key) {
		return dots_Keys.fromEventKey(code,key);
	});
	var value1 = evt.which;
	var value2 = evt.keyCode;
	var tmp1 = thx_Options.orElse(tmp,thx_Options.flatMap(thx_Options.orElse(null == value1 ? haxe_ds_Option.None : haxe_ds_Option.Some(value1),null == value2 ? haxe_ds_Option.None : haxe_ds_Option.Some(value2)),dots_Keys.fromEventCode));
	var value3 = evt.key;
	var value4 = evt.keyCode;
	var value5 = evt.which;
	return thx_Options.getOrElse(tmp1,dots_Key.Unknown(null == value3 ? haxe_ds_Option.None : haxe_ds_Option.Some(value3),null == evtCode ? haxe_ds_Option.None : haxe_ds_Option.Some(evtCode),null == value4 ? haxe_ds_Option.None : haxe_ds_Option.Some(value4),null == value5 ? haxe_ds_Option.None : haxe_ds_Option.Some(value5)));
};
dots_Keys.leftOrRight = function(code) {
	if(code[1] == 0) {
		var v = code[2];
		if(StringTools.endsWith(v,"Left")) {
			return dots_LeftOrRight.Left;
		} else {
			var v1 = code[2];
			if(StringTools.endsWith(v1,"Right")) {
				return dots_LeftOrRight.Right;
			} else {
				return dots_LeftOrRight.Unknown;
			}
		}
	} else {
		return dots_LeftOrRight.Unknown;
	}
};
dots_Keys.getModifiers = function(evt) {
	var mappings = [{ modifier : dots_Modifier.Alt, names : ["Alt"]},{ modifier : dots_Modifier.CapsLock, names : ["CapsLock"]},{ modifier : dots_Modifier.MetaOrOS(dots_MetaOrOS.Meta), names : ["Meta"]},{ modifier : dots_Modifier.MetaOrOS(dots_MetaOrOS.OS), names : ["OS"]},{ modifier : dots_Modifier.ScrollLock, names : ["ScrollLock"]},{ modifier : dots_Modifier.Shift, names : ["Shift"]}];
	return thx_Arrays.reduce(mappings,function(acc,curr) {
		if(thx_Arrays.any(curr.names,function(code) {
			return evt.getModifierState(code);
		})) {
			return acc.concat([curr.modifier]);
		} else {
			return acc;
		}
	},[]);
};
dots_Keys.fromEventKey = function(code,key) {
	switch(key) {
	case "Alt":
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Modifier(dots_Modifier.Alt,dots_Keys.leftOrRight(code))));
	case "ArrowDown":
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.DownArrow));
	case "ArrowLeft":
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.LeftArrow));
	case "ArrowRight":
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.RightArrow));
	case "ArrowUp":
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.UpArrow));
	case "Backspace":
		return haxe_ds_Option.Some(dots_Key.NamedPrinting(dots_NamedCharacter.Backspace));
	case "Break":case "Pause":
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Break));
	case "CapsLock":
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Modifier(dots_Modifier.CapsLock,dots_LeftOrRight.NA)));
	case "Apps":case "ContextMenu":
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.ContextMenu));
	case "Control":
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Modifier(dots_Modifier.Control,dots_Keys.leftOrRight(code))));
	case "Delete":
		return haxe_ds_Option.Some(dots_Key.NamedPrinting(dots_NamedCharacter.Delete));
	case "End":
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.End));
	case "Enter":
		return haxe_ds_Option.Some(dots_Key.NamedPrinting(dots_NamedCharacter.Enter));
	case "Escape":
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Escape));
	case "Home":
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Home));
	case "Insert":
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Insert));
	case "Meta":
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Modifier(dots_Modifier.MetaOrOS(dots_MetaOrOS.Meta),dots_Keys.leftOrRight(code))));
	case "NumLock":
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.NumLock));
	case "PageDown":
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.PageDown));
	case "PageUp":
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.PageUp));
	case "ScrollLock":
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Modifier(dots_Modifier.ScrollLock,dots_LeftOrRight.NA)));
	case "Select":
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Select));
	case "Shift":
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Modifier(dots_Modifier.Shift,dots_Keys.leftOrRight(code))));
	case "Tab":
		return haxe_ds_Option.Some(dots_Key.NamedPrinting(dots_NamedCharacter.Tab));
	case "OS":case "Win":
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Modifier(dots_Modifier.MetaOrOS(dots_MetaOrOS.OS),dots_Keys.leftOrRight(code))));
	default:
		var some = key;
		if(some.substring(0,1) == "F" && thx_Ints.canParse(some.substring(1))) {
			return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.F(thx_Ints.parse(some.substring(1)))));
		} else {
			var $char = key;
			if($char.length == 1) {
				switch(code[1]) {
				case 0:
					var c = code[2];
					if(StringTools.startsWith(c,"Numpad")) {
						var i = HxOverrides.cca($char,0);
						thx_Assert.isTrue(i >= 0,"Char value should be greater than zero: " + i,{ fileName : "Char.hx", lineNumber : 19, className : "thx._Char.Char_Impl_", methodName : "fromInt"});
						var this1 = i;
						return haxe_ds_Option.Some(dots_Key.Printing(this1,dots_IsNumpad.Numpad));
					} else {
						var i1 = HxOverrides.cca($char,0);
						thx_Assert.isTrue(i1 >= 0,"Char value should be greater than zero: " + i1,{ fileName : "Char.hx", lineNumber : 19, className : "thx._Char.Char_Impl_", methodName : "fromInt"});
						var this2 = i1;
						return haxe_ds_Option.Some(dots_Key.Printing(this2,dots_IsNumpad.NotNumpad));
					}
					break;
				case 1:
					var i2 = HxOverrides.cca($char,0);
					thx_Assert.isTrue(i2 >= 0,"Char value should be greater than zero: " + i2,{ fileName : "Char.hx", lineNumber : 19, className : "thx._Char.Char_Impl_", methodName : "fromInt"});
					var this3 = i2;
					return haxe_ds_Option.Some(dots_Key.Printing(this3,dots_IsNumpad.Unknown));
				}
			} else {
				return haxe_ds_Option.None;
			}
		}
	}
};
dots_Keys.fromEventCode = function(code) {
	switch(code) {
	case 8:
		return haxe_ds_Option.Some(dots_Key.NamedPrinting(dots_NamedCharacter.Backspace));
	case 9:
		return haxe_ds_Option.Some(dots_Key.NamedPrinting(dots_NamedCharacter.Tab));
	case 13:
		return haxe_ds_Option.Some(dots_Key.NamedPrinting(dots_NamedCharacter.Enter));
	case 16:
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Modifier(dots_Modifier.Shift,dots_LeftOrRight.Unknown)));
	case 17:
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Modifier(dots_Modifier.Control,dots_LeftOrRight.Unknown)));
	case 18:
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Modifier(dots_Modifier.Alt,dots_LeftOrRight.Unknown)));
	case 19:
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Break));
	case 20:
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Modifier(dots_Modifier.CapsLock,dots_LeftOrRight.Unknown)));
	case 27:
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Escape));
	case 33:
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.PageUp));
	case 34:
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.PageDown));
	case 35:
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.End));
	case 36:
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Home));
	case 37:
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.LeftArrow));
	case 38:
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.UpArrow));
	case 39:
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.RightArrow));
	case 40:
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.DownArrow));
	case 45:
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Insert));
	case 46:
		return haxe_ds_Option.Some(dots_Key.NamedPrinting(dots_NamedCharacter.Delete));
	case 91:
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Modifier(dots_Modifier.MetaOrOS(dots_MetaOrOS.Meta),dots_LeftOrRight.Left)));
	case 92:
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Modifier(dots_Modifier.MetaOrOS(dots_MetaOrOS.Meta),dots_LeftOrRight.Right)));
	case 93:
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Select));
	case 106:
		return haxe_ds_Option.Some(dots_Key.NamedPrinting(dots_NamedCharacter.Multiply));
	case 107:
		return haxe_ds_Option.Some(dots_Key.NamedPrinting(dots_NamedCharacter.Add));
	case 109:
		return haxe_ds_Option.Some(dots_Key.NamedPrinting(dots_NamedCharacter.Subtract));
	case 110:
		return haxe_ds_Option.Some(dots_Key.NamedPrinting(dots_NamedCharacter.DecimalPoint));
	case 111:
		return haxe_ds_Option.Some(dots_Key.NamedPrinting(dots_NamedCharacter.Divide));
	case 144:
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.NumLock));
	case 145:
		return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.Modifier(dots_Modifier.ScrollLock,dots_LeftOrRight.Unknown)));
	default:
		var fn = code;
		if(fn >= 112 && fn <= 130) {
			return haxe_ds_Option.Some(dots_Key.NonPrinting(dots_NonPrinting.F(fn - 111)));
		} else {
			var np = code;
			if(np >= 96 && np <= 105) {
				var i = np - 96;
				thx_Assert.isTrue(i >= 0,"Char value should be greater than zero: " + i,{ fileName : "Char.hx", lineNumber : 19, className : "thx._Char.Char_Impl_", methodName : "fromInt"});
				var this1 = i;
				return haxe_ds_Option.Some(dots_Key.Printing(this1,dots_IsNumpad.Numpad));
			} else {
				var v = code;
				if(v >= 32 && v <= 127 || v >= 160) {
					thx_Assert.isTrue(v >= 0,"Char value should be greater than zero: " + v,{ fileName : "Char.hx", lineNumber : 19, className : "thx._Char.Char_Impl_", methodName : "fromInt"});
					var this2 = v;
					return haxe_ds_Option.Some(dots_Key.Printing(this2,dots_IsNumpad.Unknown));
				} else {
					return haxe_ds_Option.None;
				}
			}
		}
	}
};
var dots_Query = function() { };
dots_Query.__name__ = true;
dots_Query.find = function(selector,ctx) {
	return (ctx != null ? ctx : dots_Query.doc).querySelector(selector);
};
dots_Query.selectNodes = function(selector,ctx) {
	return (ctx != null ? ctx : dots_Query.doc).querySelectorAll(selector);
};
dots_Query.closest = function(element,selector) {
	while(!element.matches(selector)) {
		element = element.parentElement;
		if(null == element) {
			return null;
		}
	}
	return element;
};
var fancy_VerticalScrollPosition = { __ename__ : true, __constructs__ : ["Top","Bottom","FromTop","FromBottom","Visible"] };
fancy_VerticalScrollPosition.Top = ["Top",0];
fancy_VerticalScrollPosition.Top.toString = $estr;
fancy_VerticalScrollPosition.Top.__enum__ = fancy_VerticalScrollPosition;
fancy_VerticalScrollPosition.Bottom = ["Bottom",1];
fancy_VerticalScrollPosition.Bottom.toString = $estr;
fancy_VerticalScrollPosition.Bottom.__enum__ = fancy_VerticalScrollPosition;
fancy_VerticalScrollPosition.FromTop = function(distance) { var $x = ["FromTop",2,distance]; $x.__enum__ = fancy_VerticalScrollPosition; $x.toString = $estr; return $x; };
fancy_VerticalScrollPosition.FromBottom = function(distance) { var $x = ["FromBottom",3,distance]; $x.__enum__ = fancy_VerticalScrollPosition; $x.toString = $estr; return $x; };
fancy_VerticalScrollPosition.Visible = function(distance) { var $x = ["Visible",4,distance]; $x.__enum__ = fancy_VerticalScrollPosition; $x.toString = $estr; return $x; };
var fancy_HorizontalScrollPosition = { __ename__ : true, __constructs__ : ["Left","Right","FromLeft","FromRight","Visible"] };
fancy_HorizontalScrollPosition.Left = ["Left",0];
fancy_HorizontalScrollPosition.Left.toString = $estr;
fancy_HorizontalScrollPosition.Left.__enum__ = fancy_HorizontalScrollPosition;
fancy_HorizontalScrollPosition.Right = ["Right",1];
fancy_HorizontalScrollPosition.Right.toString = $estr;
fancy_HorizontalScrollPosition.Right.__enum__ = fancy_HorizontalScrollPosition;
fancy_HorizontalScrollPosition.FromLeft = function(distance) { var $x = ["FromLeft",2,distance]; $x.__enum__ = fancy_HorizontalScrollPosition; $x.toString = $estr; return $x; };
fancy_HorizontalScrollPosition.FromRight = function(distance) { var $x = ["FromRight",3,distance]; $x.__enum__ = fancy_HorizontalScrollPosition; $x.toString = $estr; return $x; };
fancy_HorizontalScrollPosition.Visible = function(distance) { var $x = ["Visible",4,distance]; $x.__enum__ = fancy_HorizontalScrollPosition; $x.toString = $estr; return $x; };
var fancy_ScrollUnit = { __ename__ : true, __constructs__ : ["Pixels","Cells"] };
fancy_ScrollUnit.Pixels = function(value) { var $x = ["Pixels",0,value]; $x.__enum__ = fancy_ScrollUnit; $x.toString = $estr; return $x; };
fancy_ScrollUnit.Cells = function(value) { var $x = ["Cells",1,value]; $x.__enum__ = fancy_ScrollUnit; $x.toString = $estr; return $x; };
var fancy_CellDimension = { __ename__ : true, __constructs__ : ["Fixed","RenderFirst","RenderSmart","RenderAll"] };
fancy_CellDimension.Fixed = function(v) { var $x = ["Fixed",0,v]; $x.__enum__ = fancy_CellDimension; $x.toString = $estr; return $x; };
fancy_CellDimension.RenderFirst = ["RenderFirst",1];
fancy_CellDimension.RenderFirst.toString = $estr;
fancy_CellDimension.RenderFirst.__enum__ = fancy_CellDimension;
fancy_CellDimension.RenderSmart = ["RenderSmart",2];
fancy_CellDimension.RenderSmart.toString = $estr;
fancy_CellDimension.RenderSmart.__enum__ = fancy_CellDimension;
fancy_CellDimension.RenderAll = ["RenderAll",3];
fancy_CellDimension.RenderAll.toString = $estr;
fancy_CellDimension.RenderAll.__enum__ = fancy_CellDimension;
var fancy_Grid = function(parent,options) {
	this.caches = [];
	this.cacheElement = new fancy_core_PositionCache();
	var _gthis = this;
	var doc = null;
	if(null == doc) {
		doc = window.document;
	}
	var el = doc.createElement("div");
	var _g = 0;
	var _g1 = [{ value : "fancy-grid", name : "class"}];
	while(_g < _g1.length) {
		var o = _g1[_g];
		++_g;
		el.setAttribute(o.name,o.value);
	}
	var attrs = null;
	if(null != attrs) {
		var attr = attrs.keys();
		while(attr.hasNext()) {
			var attr1 = attr.next();
			el.setAttribute(attr1,__map_reserved[attr1] != null ? attrs.getReserved(attr1) : attrs.h[attr1]);
		}
	}
	var children = null;
	if(null != children) {
		var _g2 = 0;
		while(_g2 < children.length) {
			var child = children[_g2];
			++_g2;
			el.appendChild(child);
		}
	}
	var textContent = null;
	if(null != textContent) {
		el.appendChild(doc.createTextNode(textContent));
	}
	var fancyGrid = el;
	dots_Dom.append(parent,fancyGrid);
	var doc1 = null;
	if(null == doc1) {
		doc1 = window.document;
	}
	var el1 = doc1.createElement("div");
	var _g3 = 0;
	var _g11 = [{ value : "view", name : "class"}];
	while(_g3 < _g11.length) {
		var o1 = _g11[_g3];
		++_g3;
		el1.setAttribute(o1.name,o1.value);
	}
	var attrs1 = null;
	if(null != attrs1) {
		var attr2 = attrs1.keys();
		while(attr2.hasNext()) {
			var attr3 = attr2.next();
			el1.setAttribute(attr3,__map_reserved[attr3] != null ? attrs1.getReserved(attr3) : attrs1.h[attr3]);
		}
	}
	var children1 = null;
	if(null != children1) {
		var _g4 = 0;
		while(_g4 < children1.length) {
			var child1 = children1[_g4];
			++_g4;
			el1.appendChild(child1);
		}
	}
	var textContent1 = null;
	if(null != textContent1) {
		el1.appendChild(doc1.createTextNode(textContent1));
	}
	this.view = el1;
	dots_Dom.append(fancyGrid,this.view);
	this.caches.push(this.cacheElement);
	this.render = options.render;
	this.vOffset = this.assignVOffset(options.vOffset);
	this.hOffset = this.assignHOffset(options.hOffset);
	this.hSize = this.assignHSize(options.hSize != null ? options.hSize : function(_) {
		return fancy_CellDimension.RenderSmart;
	});
	this.vSize = this.assignVSize(options.vSize != null ? options.vSize : function(_1) {
		return fancy_CellDimension.RenderSmart;
	});
	this.rows = options.rows;
	this.columns = options.columns;
	var _0 = options;
	var t;
	if(null == _0) {
		t = null;
	} else {
		var _11 = _0.fixedLeft;
		if(null == _11) {
			t = null;
		} else {
			t = _11;
		}
	}
	this.fixedLeft = t != null ? t : 0;
	var _01 = options;
	var t1;
	if(null == _01) {
		t1 = null;
	} else {
		var _12 = _01.fixedRight;
		if(null == _12) {
			t1 = null;
		} else {
			t1 = _12;
		}
	}
	this.fixedRight = t1 != null ? t1 : 0;
	var _02 = options;
	var t2;
	if(null == _02) {
		t2 = null;
	} else {
		var _13 = _02.fixedTop;
		if(null == _13) {
			t2 = null;
		} else {
			t2 = _13;
		}
	}
	this.fixedTop = t2 != null ? t2 : 0;
	var _03 = options;
	var t3;
	if(null == _03) {
		t3 = null;
	} else {
		var _14 = _03.fixedBottom;
		if(null == _14) {
			t3 = null;
		} else {
			t3 = _14;
		}
	}
	this.fixedBottom = t3 != null ? t3 : 0;
	var _04 = options;
	var t4;
	if(null == _04) {
		t4 = null;
	} else {
		var _15 = _04.scrollerSize;
		if(null == _15) {
			t4 = null;
		} else {
			t4 = _15;
		}
	}
	var scrollerSize = t4 != null ? t4 : 10;
	var _05 = options;
	var t5;
	if(null == _05) {
		t5 = null;
	} else {
		var _16 = _05.onScroll;
		if(null == _16) {
			t5 = null;
		} else {
			t5 = _16;
		}
	}
	var onScroll = t5 != null ? t5 : function(_2,_3,_4,_5) {
	};
	var _06 = options;
	var t6;
	if(null == _06) {
		t6 = null;
	} else {
		var _17 = _06.onResize;
		if(null == _17) {
			t6 = null;
		} else {
			t6 = _17;
		}
	}
	var onResize = t6 != null ? t6 : function(_6,_7,_8,_9) {
	};
	var _07 = options;
	var t7;
	if(null == _07) {
		t7 = null;
	} else {
		var _18 = _07.scrollerMinSize;
		if(null == _18) {
			t7 = null;
		} else {
			t7 = _18;
		}
	}
	this.grid9 = new fancy_core_Grid9(this.view,{ scrollerMinSize : t7 != null ? t7 : scrollerSize, scrollerMaxSize : options.scrollerMaxSize, scrollerSize : scrollerSize, contentWidth : 0, contentHeight : 0, onScroll : function(x,y,ox,oy) {
		_gthis.renderCorners();
		_gthis.renderMiddle(y);
		_gthis.renderCenter(x);
		_gthis.renderMain(x,y);
		onScroll(x,y,ox,oy);
	}, onResize : function(w,h,ow,oh) {
		_gthis.renderCorners();
		_gthis.renderMiddle(_gthis.grid9.position.y);
		_gthis.renderCenter(_gthis.grid9.position.x);
		_gthis.renderMain(_gthis.grid9.position.x,_gthis.grid9.position.y);
		onResize(w,h,ow,oh);
	}, onRefresh : function() {
		_gthis.renderCorners();
		_gthis.renderMiddle(_gthis.grid9.position.y);
		_gthis.renderCenter(_gthis.grid9.position.x);
		_gthis.renderMain(_gthis.grid9.position.x,_gthis.grid9.position.y);
	}});
	this.topLeft = this.grid9.topLeft;
	this.topCenter = this.grid9.topCenter;
	this.topRight = this.grid9.topRight;
	this.middleLeft = this.grid9.middleLeft;
	this.middleCenter = this.grid9.middleCenter;
	this.middleRight = this.grid9.middleRight;
	this.bottomLeft = this.grid9.bottomLeft;
	this.bottomCenter = this.grid9.bottomCenter;
	this.bottomRight = this.grid9.bottomRight;
	this.setRowsAndColumns(this.rows,this.columns);
};
fancy_Grid.__name__ = true;
fancy_Grid.prototype = {
	patchCellContent: function(row,col,el) {
		var s = ".row-" + row + ".col-" + col;
		var p = this.grid9.el.querySelector(s);
		if(null == p) {
			return;
		}
		p.innerHTML = "";
		p.appendChild(el);
	}
	,setRowsAndColumns: function(rows,columns) {
		this.rows = rows;
		this.columns = columns;
		this.invalidateCache();
		var contentWidth = this.hOffset(columns - 1) + this.hSize(columns - 1);
		var contentHeight = this.vOffset(rows - 1) + this.vSize(rows - 1);
		this.topRailSize = this.vOffset(this.fixedTop);
		this.leftRailSize = this.hOffset(this.fixedLeft);
		this.bottomRailSize = this.fixedBottom == 0 ? 0 : contentHeight - this.vOffset(rows - this.fixedBottom);
		this.rightRailSize = this.fixedRight == 0 ? 0 : contentWidth - this.hOffset(columns - this.fixedRight);
		this.grid9.sizeRails(this.topRailSize,this.bottomRailSize,this.leftRailSize,this.rightRailSize);
		this.grid9.resizeContent(contentWidth,contentHeight);
		this.grid9.setPosition(this.grid9.position.x,this.grid9.position.y,false);
		this.renderCorners();
		this.renderMiddle(this.grid9.position.y);
		this.renderCenter(this.grid9.position.x);
		this.renderMain(this.grid9.position.x,this.grid9.position.y);
		this.grid9.refresh();
	}
	,scrollTo: function(x,y) {
		var xPos = x == null ? this.grid9.position.x : this.resolveHorizontalScroll(x);
		var yPos = y == null ? this.grid9.position.y : this.resolveVerticalScroll(y);
		this.grid9.setPosition(xPos,yPos,true);
		this.grid9.refresh();
	}
	,lookupColumn: function(x) {
		switch(x[1]) {
		case 0:
			var px = x[2];
			var cur = 0.0;
			var _g1 = 0;
			var _g = this.columns;
			while(_g1 < _g) {
				var i = _g1++;
				cur += this.hSize(i);
				if(px < cur) {
					return i;
				}
			}
			return this.columns - 1;
		case 1:
			var v = x[2];
			return v;
		}
	}
	,lookupRow: function(x) {
		switch(x[1]) {
		case 0:
			var px = x[2];
			var cur = 0.0;
			var _g1 = 0;
			var _g = this.rows;
			while(_g1 < _g) {
				var i = _g1++;
				cur += this.vSize(i);
				if(px < cur) {
					return i;
				}
			}
			return this.rows - 1;
		case 1:
			var v = x[2];
			return v;
		}
	}
	,rowsInView: function() {
		var h = this.grid9.get_gridMiddleHeight();
		var y = this.grid9.position.y;
		var r = this.lookupRow(fancy_ScrollUnit.Pixels(y));
		var i = 0;
		while(i + r < this.rows) {
			if(this.vOffset(i + r) >= y + h) {
				return i;
			}
			++i;
		}
		return i;
	}
	,resolveHorizontalDistance: function(x) {
		switch(x[1]) {
		case 0:
			var v = x[2];
			return v;
		case 1:
			var v1 = x[2];
			return this.hOffset(v1);
		}
	}
	,resolveHorizontalScroll: function(x) {
		switch(x[1]) {
		case 0:
			return 0;
		case 1:
			return this.grid9.contentWidth;
		case 2:
			var d = x[2];
			return this.resolveHorizontalDistance(d);
		case 3:
			var d1 = x[2];
			return this.grid9.contentWidth - this.resolveHorizontalDistance(d1);
		case 4:
			var d2 = x[2];
			var off = this.resolveHorizontalDistance(d2);
			var col = this.lookupColumn(d2);
			var width = this.hSize(col);
			if(col < this.fixedLeft || col >= this.columns - this.fixedRight) {
				return this.grid9.position.x;
			} else if(off < this.grid9.leftRail + this.grid9.position.x) {
				return off - this.grid9.leftRail;
			} else if(off + width > this.grid9.leftRail + this.grid9.position.x + this.grid9.get_gridCenterWidth()) {
				return off + width - this.grid9.get_gridCenterWidth() - this.grid9.leftRail;
			} else {
				return this.grid9.position.x;
			}
			break;
		}
	}
	,resolveVerticalDistance: function(y) {
		switch(y[1]) {
		case 0:
			var v = y[2];
			return v;
		case 1:
			var v1 = y[2];
			return this.vOffset(v1);
		}
	}
	,resolveVerticalScroll: function(y) {
		switch(y[1]) {
		case 0:
			return 0;
		case 1:
			return this.grid9.contentHeight;
		case 2:
			var d = y[2];
			return this.resolveVerticalDistance(d);
		case 3:
			var d1 = y[2];
			return this.grid9.contentHeight - this.resolveVerticalDistance(d1);
		case 4:
			var d2 = y[2];
			var off = this.resolveVerticalDistance(d2);
			var row = this.lookupRow(d2);
			var height = this.vSize(row);
			if(row < this.fixedTop || row >= this.rows - this.fixedBottom) {
				return this.grid9.position.y;
			} else if(off < this.grid9.topRail + this.grid9.position.y) {
				return off - this.grid9.topRail;
			} else if(off + height > this.grid9.topRail + this.grid9.position.y + this.grid9.get_gridMiddleHeight()) {
				return off + height - this.grid9.get_gridMiddleHeight() - this.grid9.topRail;
			} else {
				return this.grid9.position.y;
			}
			break;
		}
	}
	,invalidateCache: function() {
		var _g = 0;
		var _g1 = this.caches;
		while(_g < _g1.length) {
			var cache = _g1[_g];
			++_g;
			cache.invalidate();
		}
	}
	,assignVSize: function(f) {
		var _gthis = this;
		var cache = new fancy_core_IntCache();
		this.caches.push(cache);
		return function(row) {
			if(cache.cache[row] != null) {
				return cache.cache[row];
			}
			var v = 0.0;
			var vCalculated;
			var _g = f(row);
			switch(_g[1]) {
			case 0:
				var val = _g[2];
				vCalculated = val;
				break;
			case 1:
				var el = _gthis.renderWithWidth(_gthis.view,row,0);
				v = Math.max(v,dots_Dom.getOuterHeight(el));
				_gthis.view.removeChild(el);
				vCalculated = v;
				break;
			case 2:
				var els = [];
				var el1;
				var a = _gthis.fixedLeft + 1;
				var a1 = a > 2 ? a : 2;
				var b = _gthis.columns;
				var leftBound = a1 < b ? a1 : b;
				var _g1 = 0;
				var _g2 = leftBound;
				while(_g1 < _g2) {
					var i = _g1++;
					el1 = _gthis.renderWithWidth(_gthis.view,row,i);
					els.push(el1);
				}
				var a2 = _gthis.columns - _gthis.fixedRight - 1;
				var b1 = leftBound + 1;
				var rightBound = a2 > b1 ? a2 : b1;
				var _g11 = rightBound;
				var _g3 = _gthis.columns;
				while(_g11 < _g3) {
					var i1 = _g11++;
					el1 = _gthis.renderWithWidth(_gthis.view,row,i1);
					els.push(el1);
				}
				var _g4 = 0;
				while(_g4 < els.length) {
					var el2 = els[_g4];
					++_g4;
					v = Math.max(v,dots_Dom.getOuterHeight(el2));
				}
				var _g5 = 0;
				while(_g5 < els.length) {
					var el3 = els[_g5];
					++_g5;
					_gthis.view.removeChild(el3);
				}
				vCalculated = v;
				break;
			case 3:
				var els1 = [];
				var el4;
				var _g12 = 0;
				var _g6 = _gthis.columns;
				while(_g12 < _g6) {
					var i2 = _g12++;
					el4 = _gthis.renderWithWidth(_gthis.view,row,i2);
					els1.push(el4);
				}
				var _g7 = 0;
				while(_g7 < els1.length) {
					var el5 = els1[_g7];
					++_g7;
					v = Math.max(v,dots_Dom.getOuterHeight(el5));
				}
				var _g8 = 0;
				while(_g8 < els1.length) {
					var el6 = els1[_g8];
					++_g8;
					_gthis.view.removeChild(el6);
				}
				vCalculated = v;
				break;
			}
			cache.cache[row] = vCalculated;
			return vCalculated;
		};
	}
	,assignHSize: function(f) {
		var _gthis = this;
		var cache = new fancy_core_IntCache();
		this.caches.push(cache);
		return function(col) {
			if(cache.cache[col] != null) {
				return cache.cache[col];
			}
			var v = 0.0;
			var vCalculated;
			var _g = f(col);
			switch(_g[1]) {
			case 0:
				var val = _g[2];
				vCalculated = val;
				break;
			case 1:
				var el = _gthis.renderAt(0,col);
				dots_Dom.append(_gthis.view,el);
				v = Math.max(v,dots_Dom.getOuterWidth(el));
				_gthis.view.removeChild(el);
				vCalculated = v;
				break;
			case 2:
				var els = [];
				var el1;
				var a = _gthis.fixedTop + 1;
				var a1 = a > 2 ? a : 2;
				var b = _gthis.rows;
				var topBound = a1 < b ? a1 : b;
				var _g1 = 0;
				var _g2 = topBound;
				while(_g1 < _g2) {
					var i = _g1++;
					el1 = _gthis.renderAt(i,col);
					els.push(el1);
					dots_Dom.append(_gthis.view,el1);
				}
				var a2 = _gthis.rows - _gthis.fixedBottom - 1;
				var b1 = topBound + 1;
				var bottomBound = a2 > b1 ? a2 : b1;
				var _g11 = bottomBound;
				var _g3 = _gthis.rows;
				while(_g11 < _g3) {
					var i1 = _g11++;
					el1 = _gthis.renderAt(i1,col);
					els.push(el1);
					dots_Dom.append(_gthis.view,el1);
				}
				var _g4 = 0;
				while(_g4 < els.length) {
					var el2 = els[_g4];
					++_g4;
					v = Math.max(v,dots_Dom.getOuterWidth(el2));
				}
				var _g5 = 0;
				while(_g5 < els.length) {
					var el3 = els[_g5];
					++_g5;
					_gthis.view.removeChild(el3);
				}
				vCalculated = v;
				break;
			case 3:
				var els1 = [];
				var el4;
				var _g12 = 0;
				var _g6 = _gthis.rows;
				while(_g12 < _g6) {
					var i2 = _g12++;
					el4 = _gthis.renderAt(i2,col);
					els1.push(el4);
					dots_Dom.append(_gthis.view,el4);
				}
				var _g7 = 0;
				while(_g7 < els1.length) {
					var el5 = els1[_g7];
					++_g7;
					v = Math.max(v,dots_Dom.getOuterWidth(el5));
				}
				var _g8 = 0;
				while(_g8 < els1.length) {
					var el6 = els1[_g8];
					++_g8;
					_gthis.view.removeChild(el6);
				}
				vCalculated = v;
				break;
			}
			cache.cache[col] = vCalculated;
			return vCalculated;
		};
	}
	,assignVOffset: function(f) {
		var _gthis = this;
		if(null != f) {
			return f;
		}
		var cache = new fancy_core_IntCache();
		this.caches.push(cache);
		return function(row) {
			if(row == 0) {
				return 0;
			}
			if(cache.cache[row] != null) {
				return cache.cache[row];
			}
			var v = _gthis.vOffset(row - 1) + _gthis.vSize(row - 1);
			cache.cache[row] = v;
			return v;
		};
	}
	,assignHOffset: function(f) {
		var _gthis = this;
		if(null != f) {
			return f;
		}
		var cache = new fancy_core_IntCache();
		this.caches.push(cache);
		return function(col) {
			if(col == 0) {
				return 0;
			}
			if(cache.cache[col] != null) {
				return cache.cache[col];
			}
			var v = _gthis.hOffset(col - 1) + _gthis.hSize(col - 1);
			cache.cache[col] = v;
			return v;
		};
	}
	,renderAt: function(row,col) {
		var el = this.cacheElement.get(row,col);
		if(null == el) {
			el = window.document.createElement("div");
			el.setAttribute("data-row","" + row);
			el.setAttribute("data-col","" + col);
			el.className = "cell row-" + row + " col-" + col;
			el.appendChild(this.render(row,col));
			this.cacheElement.set(row,col,el);
		}
		return el;
	}
	,renderTo: function(parent,row,col) {
		var el = this.renderAt(row,col);
		dots_Dom.append(parent,el);
		var tmp = "" + this.vOffset(row);
		el.style.top = tmp + "px";
		var tmp1 = "" + this.hOffset(col);
		el.style.left = tmp1 + "px";
		var tmp2 = "" + this.hSize(col);
		el.style.width = tmp2 + "px";
		var tmp3 = "" + this.vSize(row);
		el.style.height = tmp3 + "px";
		return el;
	}
	,renderWithWidth: function(parent,row,col) {
		var el = this.renderAt(row,col);
		dots_Dom.append(parent,el);
		var tmp = "" + this.hSize(col);
		el.style.width = tmp + "px";
		return el;
	}
	,renderMiddle: function(v) {
		var a = fancy_core_Search.binary(0,this.rows - 1,this.rowComparator(v + this.topRailSize));
		var b = this.fixedTop;
		var r = a > b ? a : b;
		var top = this.vOffset(r);
		var limit = top + this.vSize(r) + this.grid9.get_gridMiddleHeight();
		dots_Dom.empty(this.grid9.middleLeft);
		dots_Dom.empty(this.grid9.middleRight);
		var doc = null;
		if(null == doc) {
			doc = window.document;
		}
		var el = doc.createElement("div");
		var _g = 0;
		var _g1 = [{ value : "anchor middle left", name : "class"}];
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			el.setAttribute(o.name,o.value);
		}
		var attrs = null;
		if(null != attrs) {
			var attr = attrs.keys();
			while(attr.hasNext()) {
				var attr1 = attr.next();
				el.setAttribute(attr1,__map_reserved[attr1] != null ? attrs.getReserved(attr1) : attrs.h[attr1]);
			}
		}
		var children = null;
		if(null != children) {
			var _g2 = 0;
			while(_g2 < children.length) {
				var child = children[_g2];
				++_g2;
				el.appendChild(child);
			}
		}
		var textContent = null;
		if(null != textContent) {
			el.appendChild(doc.createTextNode(textContent));
		}
		var leftAnchor = el;
		var doc1 = null;
		if(null == doc1) {
			doc1 = window.document;
		}
		var el1 = doc1.createElement("div");
		var _g3 = 0;
		var _g11 = [{ value : "anchor middle right", name : "class"}];
		while(_g3 < _g11.length) {
			var o1 = _g11[_g3];
			++_g3;
			el1.setAttribute(o1.name,o1.value);
		}
		var attrs1 = null;
		if(null != attrs1) {
			var attr2 = attrs1.keys();
			while(attr2.hasNext()) {
				var attr3 = attr2.next();
				el1.setAttribute(attr3,__map_reserved[attr3] != null ? attrs1.getReserved(attr3) : attrs1.h[attr3]);
			}
		}
		var children1 = null;
		if(null != children1) {
			var _g4 = 0;
			while(_g4 < children1.length) {
				var child1 = children1[_g4];
				++_g4;
				el1.appendChild(child1);
			}
		}
		var textContent1 = null;
		if(null != textContent1) {
			el1.appendChild(doc1.createTextNode(textContent1));
		}
		var rightAnchor = el1;
		var a1 = this.fixedLeft;
		var b1 = this.columns;
		var leftCols = a1 < b1 ? a1 : b1;
		var a2 = this.columns - this.fixedRight;
		var b2 = this.columns;
		var rightCols = a2 < b2 ? a2 : b2;
		leftAnchor.style.top = "" + -this.topRailSize + "px";
		rightAnchor.style.top = "" + -this.topRailSize + "px";
		var tmp = "" + -this.hOffset(rightCols);
		rightAnchor.style.left = tmp + "px";
		dots_Dom.append(this.grid9.middleLeft,leftAnchor);
		dots_Dom.append(this.grid9.middleRight,rightAnchor);
		while(r < this.rows - this.fixedBottom && top < limit + this.vSize(r)) {
			var _g12 = 0;
			var _g5 = leftCols;
			while(_g12 < _g5) {
				var c = _g12++;
				this.renderTo(leftAnchor,r,c);
			}
			var _g13 = rightCols;
			var _g6 = this.columns;
			while(_g13 < _g6) {
				var c1 = _g13++;
				this.renderTo(rightAnchor,r,c1);
			}
			top += this.vSize(r++);
		}
	}
	,renderCenter: function(v) {
		var a = fancy_core_Search.binary(0,this.columns - 1,this.columnComparator(v + this.leftRailSize));
		var b = this.fixedLeft;
		var c = a > b ? a : b;
		var left = this.hOffset(c);
		var limit = left + this.hSize(c) + this.grid9.get_gridCenterWidth();
		dots_Dom.empty(this.grid9.topCenter);
		dots_Dom.empty(this.grid9.bottomCenter);
		var doc = null;
		if(null == doc) {
			doc = window.document;
		}
		var el = doc.createElement("div");
		var _g = 0;
		var _g1 = [{ value : "anchor top center", name : "class"}];
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			el.setAttribute(o.name,o.value);
		}
		var attrs = null;
		if(null != attrs) {
			var attr = attrs.keys();
			while(attr.hasNext()) {
				var attr1 = attr.next();
				el.setAttribute(attr1,__map_reserved[attr1] != null ? attrs.getReserved(attr1) : attrs.h[attr1]);
			}
		}
		var children = null;
		if(null != children) {
			var _g2 = 0;
			while(_g2 < children.length) {
				var child = children[_g2];
				++_g2;
				el.appendChild(child);
			}
		}
		var textContent = null;
		if(null != textContent) {
			el.appendChild(doc.createTextNode(textContent));
		}
		var topAnchor = el;
		var doc1 = null;
		if(null == doc1) {
			doc1 = window.document;
		}
		var el1 = doc1.createElement("div");
		var _g3 = 0;
		var _g11 = [{ value : "anchor bottom center", name : "class"}];
		while(_g3 < _g11.length) {
			var o1 = _g11[_g3];
			++_g3;
			el1.setAttribute(o1.name,o1.value);
		}
		var attrs1 = null;
		if(null != attrs1) {
			var attr2 = attrs1.keys();
			while(attr2.hasNext()) {
				var attr3 = attr2.next();
				el1.setAttribute(attr3,__map_reserved[attr3] != null ? attrs1.getReserved(attr3) : attrs1.h[attr3]);
			}
		}
		var children1 = null;
		if(null != children1) {
			var _g4 = 0;
			while(_g4 < children1.length) {
				var child1 = children1[_g4];
				++_g4;
				el1.appendChild(child1);
			}
		}
		var textContent1 = null;
		if(null != textContent1) {
			el1.appendChild(doc1.createTextNode(textContent1));
		}
		var bottomAnchor = el1;
		var a1 = this.fixedTop;
		var b1 = this.rows;
		var topRows = a1 < b1 ? a1 : b1;
		var a2 = this.rows - this.fixedBottom;
		var b2 = this.rows;
		var bottomRows = a2 < b2 ? a2 : b2;
		topAnchor.style.left = "" + -this.leftRailSize + "px";
		var tmp = "" + -this.vOffset(bottomRows);
		bottomAnchor.style.top = tmp + "px";
		bottomAnchor.style.left = "" + -this.leftRailSize + "px";
		dots_Dom.append(this.grid9.topCenter,topAnchor);
		dots_Dom.append(this.grid9.bottomCenter,bottomAnchor);
		while(c < this.columns - this.fixedRight && left < limit + this.hSize(c)) {
			var _g12 = 0;
			var _g5 = topRows;
			while(_g12 < _g5) {
				var r = _g12++;
				this.renderTo(topAnchor,r,c);
			}
			var _g13 = bottomRows;
			var _g6 = this.rows;
			while(_g13 < _g6) {
				var r1 = _g13++;
				this.renderTo(bottomAnchor,r1,c);
			}
			left += this.hSize(c++);
		}
	}
	,renderMain: function(x,y) {
		var a = fancy_core_Search.binary(0,this.rows - 1,this.rowComparator(y + this.topRailSize));
		var b = this.fixedTop;
		var r = a > b ? a : b;
		var a1 = fancy_core_Search.binary(0,this.columns - 1,this.columnComparator(x + this.leftRailSize));
		var b1 = this.fixedLeft;
		var c = a1 > b1 ? a1 : b1;
		var left = this.hOffset(c);
		var top = this.vOffset(r);
		var hlimit = left + this.hSize(c) + this.grid9.get_gridCenterWidth();
		var vlimit = top + this.vSize(r) + this.grid9.get_gridMiddleHeight();
		dots_Dom.empty(this.grid9.middleCenter);
		var doc = null;
		if(null == doc) {
			doc = window.document;
		}
		var el = doc.createElement("div");
		var _g = 0;
		var _g1 = [{ value : "anchor middle center", name : "class"}];
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			el.setAttribute(o.name,o.value);
		}
		var attrs = null;
		if(null != attrs) {
			var attr = attrs.keys();
			while(attr.hasNext()) {
				var attr1 = attr.next();
				el.setAttribute(attr1,__map_reserved[attr1] != null ? attrs.getReserved(attr1) : attrs.h[attr1]);
			}
		}
		var children = null;
		if(null != children) {
			var _g2 = 0;
			while(_g2 < children.length) {
				var child = children[_g2];
				++_g2;
				el.appendChild(child);
			}
		}
		var textContent = null;
		if(null != textContent) {
			el.appendChild(doc.createTextNode(textContent));
		}
		var anchor = el;
		anchor.style.top = "-" + this.topRailSize + "px";
		anchor.style.left = "-" + this.leftRailSize + "px";
		dots_Dom.append(this.grid9.middleCenter,anchor);
		while(r < this.rows - this.fixedBottom && top < vlimit + this.vSize(r)) {
			var tleft = left;
			var tc = c;
			while(tc < this.columns - this.fixedRight && tleft < hlimit + this.hSize(tc)) {
				this.renderTo(anchor,r,tc);
				tleft += this.hSize(tc++);
			}
			top += this.vSize(r++);
		}
	}
	,rowComparator: function(v) {
		var _gthis = this;
		return function(r) {
			var tv = _gthis.vOffset(r);
			if(tv > v) {
				return 1;
			}
			var th = _gthis.vSize(r);
			if(tv + th >= v) {
				return 0;
			}
			return -1;
		};
	}
	,columnComparator: function(v) {
		var _gthis = this;
		return function(r) {
			var tv = _gthis.hOffset(r);
			if(tv > v) {
				return 1;
			}
			var th = _gthis.hSize(r);
			if(tv + th >= v) {
				return 0;
			}
			return -1;
		};
	}
	,renderCorners: function() {
		var a = this.fixedTop;
		var b = this.rows;
		var top = a < b ? a : b;
		var a1 = this.rows - this.fixedBottom;
		var bottom = a1 > 0 ? a1 : 0;
		var a2 = this.fixedLeft;
		var b1 = this.columns;
		var left = a2 < b1 ? a2 : b1;
		var a3 = this.columns - this.fixedRight;
		var right = a3 > 0 ? a3 : 0;
		var doc = null;
		if(null == doc) {
			doc = window.document;
		}
		var el = doc.createElement("div");
		var _g = 0;
		var _g1 = [{ value : "anchor bottom left", name : "class"}];
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			el.setAttribute(o.name,o.value);
		}
		var attrs = null;
		if(null != attrs) {
			var attr = attrs.keys();
			while(attr.hasNext()) {
				var attr1 = attr.next();
				el.setAttribute(attr1,__map_reserved[attr1] != null ? attrs.getReserved(attr1) : attrs.h[attr1]);
			}
		}
		var children = null;
		if(null != children) {
			var _g2 = 0;
			while(_g2 < children.length) {
				var child = children[_g2];
				++_g2;
				el.appendChild(child);
			}
		}
		var textContent = null;
		if(null != textContent) {
			el.appendChild(doc.createTextNode(textContent));
		}
		var bottomLeftAnchor = el;
		var doc1 = null;
		if(null == doc1) {
			doc1 = window.document;
		}
		var el1 = doc1.createElement("div");
		var _g3 = 0;
		var _g11 = [{ value : "anchor bottom right", name : "class"}];
		while(_g3 < _g11.length) {
			var o1 = _g11[_g3];
			++_g3;
			el1.setAttribute(o1.name,o1.value);
		}
		var attrs1 = null;
		if(null != attrs1) {
			var attr2 = attrs1.keys();
			while(attr2.hasNext()) {
				var attr3 = attr2.next();
				el1.setAttribute(attr3,__map_reserved[attr3] != null ? attrs1.getReserved(attr3) : attrs1.h[attr3]);
			}
		}
		var children1 = null;
		if(null != children1) {
			var _g4 = 0;
			while(_g4 < children1.length) {
				var child1 = children1[_g4];
				++_g4;
				el1.appendChild(child1);
			}
		}
		var textContent1 = null;
		if(null != textContent1) {
			el1.appendChild(doc1.createTextNode(textContent1));
		}
		var bottomRightAnchor = el1;
		var doc2 = null;
		if(null == doc2) {
			doc2 = window.document;
		}
		var el2 = doc2.createElement("div");
		var _g5 = 0;
		var _g12 = [{ value : "anchor top left", name : "class"}];
		while(_g5 < _g12.length) {
			var o2 = _g12[_g5];
			++_g5;
			el2.setAttribute(o2.name,o2.value);
		}
		var attrs2 = null;
		if(null != attrs2) {
			var attr4 = attrs2.keys();
			while(attr4.hasNext()) {
				var attr5 = attr4.next();
				el2.setAttribute(attr5,__map_reserved[attr5] != null ? attrs2.getReserved(attr5) : attrs2.h[attr5]);
			}
		}
		var children2 = null;
		if(null != children2) {
			var _g6 = 0;
			while(_g6 < children2.length) {
				var child2 = children2[_g6];
				++_g6;
				el2.appendChild(child2);
			}
		}
		var textContent2 = null;
		if(null != textContent2) {
			el2.appendChild(doc2.createTextNode(textContent2));
		}
		var topLeftAnchor = el2;
		var doc3 = null;
		if(null == doc3) {
			doc3 = window.document;
		}
		var el3 = doc3.createElement("div");
		var _g7 = 0;
		var _g13 = [{ value : "anchor top right", name : "class"}];
		while(_g7 < _g13.length) {
			var o3 = _g13[_g7];
			++_g7;
			el3.setAttribute(o3.name,o3.value);
		}
		var attrs3 = null;
		if(null != attrs3) {
			var attr6 = attrs3.keys();
			while(attr6.hasNext()) {
				var attr7 = attr6.next();
				el3.setAttribute(attr7,__map_reserved[attr7] != null ? attrs3.getReserved(attr7) : attrs3.h[attr7]);
			}
		}
		var children3 = null;
		if(null != children3) {
			var _g8 = 0;
			while(_g8 < children3.length) {
				var child3 = children3[_g8];
				++_g8;
				el3.appendChild(child3);
			}
		}
		var textContent3 = null;
		if(null != textContent3) {
			el3.appendChild(doc3.createTextNode(textContent3));
		}
		var topRightAnchor = el3;
		var vDelta = this.vOffset(bottom);
		var hDelta = this.hOffset(right);
		bottomRightAnchor.style.left = "" + -hDelta + "px";
		bottomRightAnchor.style.top = "" + -vDelta + "px";
		bottomLeftAnchor.style.top = "" + -vDelta + "px";
		topRightAnchor.style.left = "" + -hDelta + "px";
		dots_Dom.empty(this.topLeft);
		dots_Dom.empty(this.topRight);
		dots_Dom.append(this.topLeft,topLeftAnchor);
		dots_Dom.append(this.topRight,topRightAnchor);
		var _g14 = 0;
		var _g9 = top;
		while(_g14 < _g9) {
			var r = _g14++;
			var _g31 = 0;
			var _g21 = left;
			while(_g31 < _g21) {
				var c = _g31++;
				this.renderTo(topLeftAnchor,r,c);
			}
			var _g32 = right;
			var _g22 = this.columns;
			while(_g32 < _g22) {
				var c1 = _g32++;
				this.renderTo(topRightAnchor,r,c1);
			}
		}
		dots_Dom.empty(this.bottomLeft);
		dots_Dom.empty(this.bottomRight);
		dots_Dom.append(this.bottomLeft,bottomLeftAnchor);
		dots_Dom.append(this.bottomRight,bottomRightAnchor);
		var _g15 = bottom;
		var _g10 = this.rows;
		while(_g15 < _g10) {
			var r1 = _g15++;
			var _g33 = 0;
			var _g23 = left;
			while(_g33 < _g23) {
				var c2 = _g33++;
				this.renderTo(bottomLeftAnchor,r1,c2);
			}
			var _g34 = right;
			var _g24 = this.columns;
			while(_g34 < _g24) {
				var c3 = _g34++;
				this.renderTo(bottomRightAnchor,r1,c3);
			}
		}
	}
	,resetCacheForRange: function(minRow,minCol,maxRow,maxCol) {
		var _g1 = minRow;
		var _g = maxRow + 1;
		while(_g1 < _g) {
			var r = _g1++;
			var _g3 = minCol;
			var _g2 = maxCol + 1;
			while(_g3 < _g2) {
				var c = _g3++;
				this.cacheElement.remove(r,c);
			}
		}
	}
	,__class__: fancy_Grid
};
var fancy_FancyTableData = { __ename__ : true, __constructs__ : ["Tabular","Nested"] };
fancy_FancyTableData.Tabular = function(data) { var $x = ["Tabular",0,data]; $x.__enum__ = fancy_FancyTableData; $x.toString = $estr; return $x; };
fancy_FancyTableData.Nested = function(data) { var $x = ["Nested",1,data]; $x.__enum__ = fancy_FancyTableData; $x.toString = $estr; return $x; };
var fancy_Table = function(parent,data,options) {
	this.maxColumns = 0;
	this.visibleRows = [];
	this.rows = [];
	var _gthis = this;
	this.settings = fancy_table_FancyTableSettings.fromOptions(options);
	var value = options.selection;
	var _e = null == value ? haxe_ds_Option.None : haxe_ds_Option.Some(value);
	this.selection = (function(callback) {
		return thx_Options.map(_e,callback);
	})(function(_) {
		return new fancy_table_Range(new fancy_table_Coords(_.minRow,_.minCol),new fancy_table_Coords(_.maxRow,_.maxCol));
	});
	this.grid = new fancy_Grid(parent,{ rows : 1, columns : 3, render : $bind(this,this.renderGridCell), fixedLeft : this.settings.fixedLeft, fixedTop : this.settings.fixedTop, vSize : $bind(this,this.assignVSize), hSize : function(col) {
		return _gthis.settings.hSize(col,_gthis.maxColumns);
	}, onScroll : function(x,y,ox,oy) {
		_gthis.settings.onScroll(new fancy_table_ScrollEvent(_gthis,x,y,ox,oy));
	}, onResize : function(x1,y1,ox1,oy1) {
		_gthis.settings.onResize(new fancy_table_ResizeEvent(_gthis,x1,y1,ox1,oy1));
	}});
	this.setData(data);
	this.wireEvents(parent);
};
fancy_Table.__name__ = true;
fancy_Table.flattenVisibleRows = function(rows) {
	return thx_Arrays.reduce(rows,function(acc,r) {
		var children = r.expanded ? r.rows : [];
		return thx_Arrays.append(acc,r).concat(fancy_Table.flattenVisibleRows(children));
	},[]);
};
fancy_Table.insertRowAt = function(table,index,newRow) {
	var a = table.maxColumns;
	var b = newRow.cells.length;
	table.maxColumns = a > b ? a : b;
	table.rows.splice(index,0,newRow);
	return table;
};
fancy_Table.tableAppendRow = function(table,row) {
	return fancy_Table.insertRowAt(table,table.rows.length,row);
};
fancy_Table.prototype = {
	wireEvents: function(el) {
		var _gthis = this;
		if(this.settings.focusOnHover) {
			el.addEventListener("mouseenter",$bind(this,this.focus),false);
			el.addEventListener("mouseleave",$bind(this,this.blur),false);
		} else if(this.settings.alwaysFocused) {
			this.focus();
		} else {
			el.addEventListener("mousedown",function(e) {
				_gthis.focus();
			},false);
			window.document.addEventListener("mousedown",$bind(this,this.blur),false);
		}
		if(this.settings.selectionEnabled) {
			var counter = 0;
			var cancel = function() {
			};
			el.addEventListener("mousedown",function(e1) {
				if((counter += 1) == 1) {
					cancel = thx_Timer.delay(function() {
						counter = 0;
					},400);
				} else if(counter == 2) {
					_gthis.dblClick(e1);
				} else {
					counter = 0;
					cancel();
				}
				_gthis.beginDrag(e1);
				window.document.addEventListener("mousemove",$bind(_gthis,_gthis.mouseMove),false);
				window.document.addEventListener("mouseup",$bind(_gthis,_gthis.mouseUp),false);
			});
			window.document.addEventListener("keydown",$bind(this,this.keyDown),false);
		} else {
			el.addEventListener("dblclick",$bind(this,this.dblClick),false);
		}
	}
	,mouseMove: function(e) {
		this.dragging(e);
	}
	,mouseUp: function(e) {
		window.document.removeEventListener("mousemove",$bind(this,this.mouseMove),false);
		window.document.removeEventListener("mouseup",$bind(this,this.mouseUp),false);
	}
	,keyDown: function(e) {
		if(!this.hasFocus) {
			return;
		}
		this.pressKey(fancy_table_KeyEvent.fromKeyboardEvent(this,e));
	}
	,dblClick: function(e) {
		var _gthis = this;
		thx_Options.each(this.getCoords(e.target),function(coords) {
			_gthis.settings.onDoubleClick(new fancy_table_CellEvent(_gthis,coords));
			return;
		});
	}
	,beginDrag: function(e) {
		if(e.shiftKey) {
			this.selectToCoords(e.target);
		} else {
			this.selectAtCoords(e.target);
		}
	}
	,dragging: function(e) {
		this.selectToCoords(e.target);
	}
	,selectAtCoords: function(target) {
		var _gthis = this;
		var _e = this.getCoords(target);
		thx_Options.each((function(f) {
			return thx_Options.each(_e,f);
		})(function(_) {
			var tmp = _.get_row();
			var tmp1 = _.get_col();
			_gthis.select(tmp,tmp1);
			return;
		}),function(coords) {
			_gthis.settings.onClick(new fancy_table_CellEvent(_gthis,coords));
			return;
		});
	}
	,selectToCoords: function(target) {
		var _gthis = this;
		var _e = this.getCoords(target);
		(function(f) {
			return thx_Options.each(_e,f);
		})(function(_) {
			var tmp = _.get_row();
			var tmp1 = _.get_col();
			_gthis.selectCurrentToCell(tmp,tmp1);
			return;
		});
	}
	,getCoords: function(el) {
		var cell = dots_Query.closest(el,"div.cell");
		if(null == cell) {
			return haxe_ds_Option.None;
		}
		var row = Std.parseInt(cell.getAttribute("data-row"));
		var col = Std.parseInt(cell.getAttribute("data-col"));
		return haxe_ds_Option.Some(new fancy_table_Coords(row,col));
	}
	,pressKey: function(e) {
		var shiftPressed = thx_Arrays.contains(e.key.modifiers,dots_Modifier.Shift);
		var ctrlOrMacCmd = e.isCmdOnMacOrCtrl();
		var _g = e.key;
		switch(_g.key[1]) {
		case 1:
			switch(_g.key[2][1]) {
			case 5:
				e.preventDefault();
				if(shiftPressed) {
					this.goPreviousHorizontal();
				} else {
					this.goNextHorizontal();
				}
				break;
			case 6:
				e.preventDefault();
				if(shiftPressed) {
					this.goPrevious();
				} else {
					this.goNext();
				}
				break;
			default:
			}
			break;
		case 2:
			switch(_g.key[2][1]) {
			case 2:
				e.preventDefault();
				if(shiftPressed && this.settings.rangeSelectionEnabled) {
					this.selectPageUp();
				} else {
					this.goPageUp();
				}
				break;
			case 3:
				e.preventDefault();
				if(shiftPressed && this.settings.rangeSelectionEnabled) {
					this.selectPageDown();
				} else {
					this.goPageDown();
				}
				break;
			case 4:
				e.preventDefault();
				if(shiftPressed && this.settings.rangeSelectionEnabled) {
					this.selectToLastColumn();
				} else {
					this.goLastColumn();
				}
				break;
			case 5:
				e.preventDefault();
				if(shiftPressed && this.settings.rangeSelectionEnabled) {
					this.selectToFirstColumn();
				} else {
					this.goFirstColumn();
				}
				break;
			case 6:
				e.preventDefault();
				if(shiftPressed && this.settings.rangeSelectionEnabled) {
					if(ctrlOrMacCmd) {
						this.selectToFirstColumn();
					} else {
						this.selectLeft();
					}
				} else if(e.isCmdOnMacOrCtrl()) {
					this.goFirstColumn();
				} else {
					this.goLeft();
				}
				break;
			case 7:
				e.preventDefault();
				if(shiftPressed && this.settings.rangeSelectionEnabled) {
					if(ctrlOrMacCmd) {
						this.selectToFirstRow();
					} else {
						this.selectUp();
					}
				} else if(ctrlOrMacCmd) {
					this.goFirstRow();
				} else {
					this.goUp();
				}
				break;
			case 8:
				e.preventDefault();
				if(shiftPressed && this.settings.rangeSelectionEnabled) {
					if(e.isCmdOnMacOrCtrl()) {
						this.selectToLastColumn();
					} else {
						this.selectRight();
					}
				} else if(e.isCmdOnMacOrCtrl()) {
					this.goLastColumn();
				} else {
					this.goRight();
				}
				break;
			case 9:
				e.preventDefault();
				if(shiftPressed && this.settings.rangeSelectionEnabled) {
					if(ctrlOrMacCmd) {
						this.selectToLastRow();
					} else {
						this.selectDown();
					}
				} else if(ctrlOrMacCmd) {
					this.goLastRow();
				} else {
					this.goDown();
				}
				break;
			default:
			}
			break;
		default:
		}
		this.settings.onKey(e);
	}
	,renderCell: function(row,col,content) {
		var _gthis = this;
		thx_Options.each(thx_Options.map(thx_Arrays.getOption(this.visibleRows,row),function(r) {
			var el = fancy_table_util__$CellContent_CellContent_$Impl_$.render(content,r.classSettings.cellContent,_gthis,row,col);
			return r.renderCellContainer([],el,row,col);
		}),function(el1) {
			_gthis.grid.patchCellContent(row,col,el1);
		});
	}
	,select: function(row,col) {
		this.selectRange(row,col,row,col,row,col);
	}
	,goFirst: function() {
		this.selectRange(0,0,0,0,0,0);
	}
	,goFirstColumn: function() {
		this.selectFromRange(function(_) {
			return _.firstColumn();
		});
	}
	,goLastColumn: function() {
		var last = this.grid.columns - 1;
		this.selectFromRange(function(_) {
			return _.goToColumn(last);
		});
	}
	,goFirstRow: function() {
		this.selectFromRange(function(_) {
			return _.firstRow();
		});
	}
	,goLastRow: function() {
		var last = this.grid.rows - 1;
		this.selectFromRange(function(_) {
			return _.goToRow(last);
		});
	}
	,goPageUp: function() {
		var size = this.grid.rowsInView();
		this.selectFromRange(function(_) {
			return _.upRows(size);
		});
	}
	,goPageDown: function() {
		var last = this.grid.rows - 1;
		var size = this.grid.rowsInView();
		this.selectFromRange(function(_) {
			return _.downRows(size,last);
		});
	}
	,goNextHorizontal: function() {
		this.selectFromRange(function(_) {
			return _.nextHorizontal();
		});
	}
	,goPreviousHorizontal: function() {
		this.selectFromRange(function(_) {
			return _.previousHorizontal();
		});
	}
	,goNext: function() {
		this.selectFromRange(function(_) {
			return _.next();
		});
	}
	,goPrevious: function() {
		this.selectFromRange(function(_) {
			return _.previous();
		});
	}
	,goLeft: function() {
		this.selectFromRange(function(_) {
			return _.left();
		});
	}
	,goRight: function() {
		this.selectFromRange(function(_) {
			return _.right();
		});
	}
	,goUp: function() {
		this.selectFromRange(function(_) {
			return _.up();
		});
	}
	,goDown: function() {
		this.selectFromRange(function(_) {
			return _.down();
		});
	}
	,selectToFirstColumn: function() {
		this.selectFromRange(function(_) {
			return _.selectToFirstColumn();
		});
		this.scrollToCol(0);
	}
	,selectToLastColumn: function() {
		var last = this.grid.columns - 1;
		this.selectFromRange(function(_) {
			return _.selectToColumn(last);
		});
		this.scrollToCol(last);
	}
	,selectToFirstRow: function() {
		this.selectFromRange(function(_) {
			return _.selectToFirstRow();
		});
		this.scrollToRow(0);
	}
	,selectToLastRow: function() {
		var last = this.grid.rows - 1;
		this.selectFromRange(function(_) {
			return _.selectToRow(last);
		});
		this.scrollToRow(last);
	}
	,selectPageUp: function() {
		var size = this.grid.rowsInView();
		this.selectFromRange(function(_) {
			return _.selectUpRows(size);
		});
	}
	,selectPageDown: function() {
		var last = this.grid.rows - 1;
		var size = this.grid.rowsInView();
		this.selectFromRange(function(_) {
			return _.selectDownRows(size,last);
		});
	}
	,selectCurrentToCell: function(row,col) {
		this.selectFromRange(function(_) {
			return _.selectCurrentToCell(row,col);
		});
		this.scrollToCell(row,col);
	}
	,selectFromRange: function(f) {
		var _g = this.selection;
		switch(_g[1]) {
		case 0:
			var range = _g[2];
			this.selectWithRange(f(range));
			break;
		case 1:
			this.goFirst();
			break;
		}
	}
	,selectLeft: function() {
		var left = this.getRange(function(r) {
			return r.selectLeft();
		});
		this.selectWithRange(left);
		var _g = this.selection;
		switch(_g[1]) {
		case 0:
			var r1 = _g[2];
			if(r1.active.get_col() > r1.min.get_col()) {
				this.scrollToCol(r1.min.get_col());
			} else {
				this.scrollToCol(r1.max.get_col());
			}
			break;
		case 1:
			break;
		}
	}
	,selectRight: function() {
		var right = this.getRange(function(r) {
			return r.selectRight();
		});
		this.selectWithRange(right);
		var _g = this.selection;
		switch(_g[1]) {
		case 0:
			var r1 = _g[2];
			if(r1.active.get_col() < r1.max.get_col()) {
				this.scrollToCol(r1.max.get_col());
			} else {
				this.scrollToCol(r1.min.get_col());
			}
			break;
		case 1:
			break;
		}
	}
	,selectUp: function() {
		var up = this.getRange(function(r) {
			return r.selectUp();
		});
		this.selectWithRange(up);
		var _g = this.selection;
		switch(_g[1]) {
		case 0:
			var r1 = _g[2];
			if(r1.active.get_row() > r1.min.get_row()) {
				this.scrollToRow(r1.min.get_row());
			} else {
				this.scrollToRow(r1.max.get_row());
			}
			break;
		case 1:
			break;
		}
	}
	,selectDown: function() {
		var down = this.getRange(function(r) {
			return r.selectDown();
		});
		this.selectWithRange(down);
		var _g = this.selection;
		switch(_g[1]) {
		case 0:
			var r1 = _g[2];
			if(r1.active.get_row() < r1.max.get_row()) {
				this.scrollToRow(r1.max.get_row());
			} else {
				this.scrollToRow(r1.min.get_row());
			}
			break;
		case 1:
			break;
		}
	}
	,getRange: function(f) {
		var _g = this.selection;
		switch(_g[1]) {
		case 0:
			var r = _g[2];
			return f(r);
		case 1:
			return new fancy_table_Range(new fancy_table_Coords(0,0),new fancy_table_Coords(0,0));
		}
	}
	,selectWithRange: function(range) {
		this.selectRange(range.min.get_row(),range.min.get_col(),range.max.get_row(),range.max.get_col(),range.active.get_row(),range.active.get_col());
	}
	,selectRange: function(minRow,minCol,maxRow,maxCol,row,col) {
		if(!this.settings.selectionEnabled) {
			return;
		}
		if(!this.settings.rangeSelectionEnabled) {
			maxRow = minRow;
			maxCol = minCol;
		}
		if(minRow < 0 || minCol < 0) {
			return;
		}
		if(maxRow >= this.bottomRight.get_row() || maxCol >= this.bottomRight.get_col()) {
			return;
		}
		if(null == row) {
			row = minRow;
		}
		if(null == col) {
			col = minCol;
		}
		var range = new fancy_table_Range(new fancy_table_Coords(minRow,minCol),new fancy_table_Coords(maxRow,maxCol));
		range.active.set_row(row);
		range.active.set_col(col);
		var _g = this.selection;
		if(_g[1] == 0) {
			var old = _g[2];
			if(old.equals(range)) {
				return;
			}
		}
		var _g1 = this.selection;
		switch(_g1[1]) {
		case 0:
			var range1 = _g1[2];
			this.grid.resetCacheForRange(range1.min.get_row(),range1.min.get_col(),range1.max.get_row(),range1.max.get_col());
			break;
		case 1:
			break;
		}
		var oldRange = this.selection;
		this.selection = haxe_ds_Option.Some(range);
		this.grid.resetCacheForRange(range.min.get_row(),range.min.get_col(),range.max.get_row(),range.max.get_col());
		this.scrollToCell(row,col);
		this.settings.onRangeChange(new fancy_table_RangeEvent(this,oldRange,this.selection));
	}
	,scrollToCell: function(row,col) {
		this.grid.scrollTo(fancy_HorizontalScrollPosition.Visible(fancy_ScrollUnit.Cells(col)),fancy_VerticalScrollPosition.Visible(fancy_ScrollUnit.Cells(row)));
	}
	,scrollToRow: function(row) {
		this.grid.scrollTo(null,fancy_VerticalScrollPosition.Visible(fancy_ScrollUnit.Cells(row)));
	}
	,scrollToCol: function(col) {
		this.grid.scrollTo(fancy_HorizontalScrollPosition.Visible(fancy_ScrollUnit.Cells(col)),null);
	}
	,assignVSize: function(row) {
		return thx_Options.cata(thx_Arrays.getOption(this.visibleRows,row),fancy_CellDimension.Fixed(0),function(r) {
			return r.height;
		});
	}
	,renderGridCell: function(row,col) {
		var _gthis = this;
		var classes = [];
		var _e = thx_Arrays.getOption(this.visibleRows,row);
		return thx_Options.getOrElse((function(callback) {
			return thx_Options.flatMap(_e,callback);
		})(function(_) {
			return _.renderCell(_gthis,row,col,classes);
		}),fancy_table_util__$CellContent_CellContent_$Impl_$.render(this.settings.fallbackCell,["ft-cell-content"].concat(classes).join(" "),this,row,col));
	}
	,focus: function() {
		if(this.hasFocus) {
			return;
		}
		this.hasFocus = true;
		this.settings.onFocus(this);
	}
	,blur: function() {
		if(!this.hasFocus) {
			return;
		}
		this.hasFocus = false;
		this.settings.onBlur(this);
	}
	,setData: function(data,resetScroll) {
		if(resetScroll == null) {
			resetScroll = true;
		}
		var _gthis = this;
		var newRows;
		switch(data[1]) {
		case 0:
			var d = data[2];
			newRows = d.map(function(_) {
				return new fancy_table_Row(_gthis,_,_gthis.settings.classes,fancy_CellDimension.RenderSmart);
			});
			break;
		case 1:
			var d1 = data[2];
			newRows = fancy_table_util_NestedData.toRows(d1,this,this.settings.classes);
			break;
		}
		this.rows = [];
		this.maxColumns = 0;
		thx_Arrays.reduce(newRows,fancy_Table.tableAppendRow,this);
		this.visibleRows = fancy_Table.flattenVisibleRows(this.rows);
		this.bottomRight = new fancy_table_Coords(this.visibleRows.length,this.maxColumns);
		var a = this.visibleRows.length;
		var a1 = this.maxColumns;
		this.grid.setRowsAndColumns(a > 1 ? a : 1,a1 > 1 ? a1 : 1);
		if(resetScroll) {
			this.resetScroll();
		}
		return this;
	}
	,resetScroll: function() {
		this.grid.scrollTo(this.settings.initialScrollX,this.settings.initialScrollY);
	}
	,toggleRow: function(index) {
		var _gthis = this;
		thx_Options.map(thx_Arrays.getOption(this.visibleRows,index),function(r) {
			r.toggle();
			_gthis.visibleRows = fancy_Table.flattenVisibleRows(_gthis.rows);
			_gthis.bottomRight = new fancy_table_Coords(_gthis.visibleRows.length,_gthis.maxColumns);
			var a = _gthis.visibleRows.length;
			var a1 = _gthis.maxColumns;
			_gthis.grid.setRowsAndColumns(a > 1 ? a : 1,a1 > 1 ? a1 : 1);
		});
	}
	,__class__: fancy_Table
};
var fancy_core_DragMoveHelper = function(el,callback) {
	var _gthis = this;
	this.el = el;
	el.addEventListener("mousedown",function(e) {
		if(_gthis.moving) {
			return;
		}
		e.preventDefault();
		e.stopPropagation();
		_gthis.moving = true;
		_gthis.x = e.clientX;
		_gthis.y = e.clientY;
	});
	window.document.addEventListener("mousemove",function(e1) {
		if(!_gthis.moving) {
			return;
		}
		e1.preventDefault();
		dots_Dom.toggleClass(el,"dragging",true);
		var dx = e1.clientX - _gthis.x;
		var dy = e1.clientY - _gthis.y;
		_gthis.x = e1.clientX;
		_gthis.y = e1.clientY;
		callback(dx,dy);
	});
	window.document.addEventListener("mouseup",function(e2) {
		if(!_gthis.moving) {
			return;
		}
		e2.preventDefault();
		dots_Dom.toggleClass(el,"dragging",false);
		_gthis.moving = false;
	});
};
fancy_core_DragMoveHelper.__name__ = true;
fancy_core_DragMoveHelper.prototype = {
	__class__: fancy_core_DragMoveHelper
};
var fancy_core_Grid9 = function(parent,options) {
	var _gthis = this;
	this.position = { x : 0.0, y : 0.0};
	var _0 = options;
	var t;
	if(null == _0) {
		t = null;
	} else {
		var _1 = _0.onScroll;
		if(null == _1) {
			t = null;
		} else {
			t = _1;
		}
	}
	this.onScroll = t != null ? t : function(x,y,ox,oy) {
	};
	var _01 = options;
	var t1;
	if(null == _01) {
		t1 = null;
	} else {
		var _11 = _01.onResize;
		if(null == _11) {
			t1 = null;
		} else {
			t1 = _11;
		}
	}
	this.onResize = t1 != null ? t1 : function(w,h,ow,oh) {
	};
	var _02 = options;
	var t2;
	if(null == _02) {
		t2 = null;
	} else {
		var _12 = _02.onRefresh;
		if(null == _12) {
			t2 = null;
		} else {
			t2 = _12;
		}
	}
	this.onRefresh = t2 != null ? t2 : function() {
	};
	var offset = function() {
		if(_gthis.contentWidth > _gthis.gridWidth && _gthis.contentHeight > _gthis.gridHeight) {
			return _gthis.scrollerSize + _gthis.scrollerMargin;
		} else {
			return 0;
		}
	};
	var viewHeight = $bind(this,this.get_gridMiddleHeight);
	var contentHeight = function() {
		return _gthis.contentHeight - _gthis.topRail - _gthis.bottomRail;
	};
	var viewWidth = $bind(this,this.get_gridCenterWidth);
	var contentWidth = function() {
		return _gthis.contentWidth - _gthis.leftRail - _gthis.rightRail;
	};
	var minScrollerSize;
	if(null != options.scrollerMinSize) {
		var v = options.scrollerMinSize;
		minScrollerSize = function() {
			return v;
		};
	} else {
		minScrollerSize = null;
	}
	var maxScrollerSize;
	if(null != options.scrollerMaxSize) {
		var v1 = options.scrollerMaxSize;
		maxScrollerSize = function() {
			return v1;
		};
	} else {
		maxScrollerSize = null;
	}
	this.scrollerVDimensions = new fancy_core_ScrollerDimensions({ viewSize : viewHeight, contentSize : contentHeight, scrollerArea : fancy_core__$Lazy_Lazy_$Impl_$.subtract(viewHeight,offset), minScrollerSize : minScrollerSize, maxScrollerSize : maxScrollerSize});
	this.scrollerHDimensions = new fancy_core_ScrollerDimensions({ viewSize : viewWidth, contentSize : contentWidth, scrollerArea : fancy_core__$Lazy_Lazy_$Impl_$.subtract(viewWidth,offset), minScrollerSize : minScrollerSize, maxScrollerSize : maxScrollerSize});
	this.scrollerSize = options.scrollerSize;
	var _03 = options;
	var t3;
	if(null == _03) {
		t3 = null;
	} else {
		var _13 = _03.scrollerMargin;
		if(null == _13) {
			t3 = null;
		} else {
			t3 = _13;
		}
	}
	this.scrollerMargin = t3 != null ? t3 : 0;
	var doc = null;
	if(null == doc) {
		doc = window.document;
	}
	var el = doc.createElement("div");
	var _g = 0;
	var _g1 = [{ value : "grid9", name : "class"}];
	while(_g < _g1.length) {
		var o = _g1[_g];
		++_g;
		el.setAttribute(o.name,o.value);
	}
	var attrs = null;
	if(null != attrs) {
		var attr = attrs.keys();
		while(attr.hasNext()) {
			var attr1 = attr.next();
			el.setAttribute(attr1,__map_reserved[attr1] != null ? attrs.getReserved(attr1) : attrs.h[attr1]);
		}
	}
	var doc1 = null;
	if(null == doc1) {
		doc1 = window.document;
	}
	var el1 = doc1.createElement("div");
	var _g2 = 0;
	var _g11 = [{ value : "scroller scroller-v", name : "class"}];
	while(_g2 < _g11.length) {
		var o1 = _g11[_g2];
		++_g2;
		el1.setAttribute(o1.name,o1.value);
	}
	var attrs1 = null;
	if(null != attrs1) {
		var attr2 = attrs1.keys();
		while(attr2.hasNext()) {
			var attr3 = attr2.next();
			el1.setAttribute(attr3,__map_reserved[attr3] != null ? attrs1.getReserved(attr3) : attrs1.h[attr3]);
		}
	}
	var children = null;
	if(null != children) {
		var _g3 = 0;
		while(_g3 < children.length) {
			var child = children[_g3];
			++_g3;
			el1.appendChild(child);
		}
	}
	var textContent = null;
	if(null != textContent) {
		el1.appendChild(doc1.createTextNode(textContent));
	}
	var children1 = el1;
	var doc2 = null;
	if(null == doc2) {
		doc2 = window.document;
	}
	var el2 = doc2.createElement("div");
	var _g4 = 0;
	var _g12 = [{ value : "scroller scroller-h", name : "class"}];
	while(_g4 < _g12.length) {
		var o2 = _g12[_g4];
		++_g4;
		el2.setAttribute(o2.name,o2.value);
	}
	var attrs2 = null;
	if(null != attrs2) {
		var attr4 = attrs2.keys();
		while(attr4.hasNext()) {
			var attr5 = attr4.next();
			el2.setAttribute(attr5,__map_reserved[attr5] != null ? attrs2.getReserved(attr5) : attrs2.h[attr5]);
		}
	}
	var children2 = null;
	if(null != children2) {
		var _g5 = 0;
		while(_g5 < children2.length) {
			var child1 = children2[_g5];
			++_g5;
			el2.appendChild(child1);
		}
	}
	var textContent1 = null;
	if(null != textContent1) {
		el2.appendChild(doc2.createTextNode(textContent1));
	}
	var children3 = el2;
	var doc3 = null;
	if(null == doc3) {
		doc3 = window.document;
	}
	var el3 = doc3.createElement("div");
	var _g6 = 0;
	var _g13 = [{ value : "row top", name : "class"}];
	while(_g6 < _g13.length) {
		var o3 = _g13[_g6];
		++_g6;
		el3.setAttribute(o3.name,o3.value);
	}
	var attrs3 = null;
	if(null != attrs3) {
		var attr6 = attrs3.keys();
		while(attr6.hasNext()) {
			var attr7 = attr6.next();
			el3.setAttribute(attr7,__map_reserved[attr7] != null ? attrs3.getReserved(attr7) : attrs3.h[attr7]);
		}
	}
	var children4 = null;
	if(null != children4) {
		var _g7 = 0;
		while(_g7 < children4.length) {
			var child2 = children4[_g7];
			++_g7;
			el3.appendChild(child2);
		}
	}
	var textContent2 = null;
	if(null != textContent2) {
		el3.appendChild(doc3.createTextNode(textContent2));
	}
	var children5 = el3;
	var doc4 = null;
	if(null == doc4) {
		doc4 = window.document;
	}
	var el4 = doc4.createElement("div");
	var _g8 = 0;
	var _g14 = [{ value : "row bottom", name : "class"}];
	while(_g8 < _g14.length) {
		var o4 = _g14[_g8];
		++_g8;
		el4.setAttribute(o4.name,o4.value);
	}
	var attrs4 = null;
	if(null != attrs4) {
		var attr8 = attrs4.keys();
		while(attr8.hasNext()) {
			var attr9 = attr8.next();
			el4.setAttribute(attr9,__map_reserved[attr9] != null ? attrs4.getReserved(attr9) : attrs4.h[attr9]);
		}
	}
	var children6 = null;
	if(null != children6) {
		var _g9 = 0;
		while(_g9 < children6.length) {
			var child3 = children6[_g9];
			++_g9;
			el4.appendChild(child3);
		}
	}
	var textContent3 = null;
	if(null != textContent3) {
		el4.appendChild(doc4.createTextNode(textContent3));
	}
	var children7 = el4;
	var doc5 = null;
	if(null == doc5) {
		doc5 = window.document;
	}
	var el5 = doc5.createElement("div");
	var _g10 = 0;
	var _g15 = [{ value : "column left", name : "class"}];
	while(_g10 < _g15.length) {
		var o5 = _g15[_g10];
		++_g10;
		el5.setAttribute(o5.name,o5.value);
	}
	var attrs5 = null;
	if(null != attrs5) {
		var attr10 = attrs5.keys();
		while(attr10.hasNext()) {
			var attr11 = attr10.next();
			el5.setAttribute(attr11,__map_reserved[attr11] != null ? attrs5.getReserved(attr11) : attrs5.h[attr11]);
		}
	}
	var children8 = null;
	if(null != children8) {
		var _g16 = 0;
		while(_g16 < children8.length) {
			var child4 = children8[_g16];
			++_g16;
			el5.appendChild(child4);
		}
	}
	var textContent4 = null;
	if(null != textContent4) {
		el5.appendChild(doc5.createTextNode(textContent4));
	}
	var children9 = el5;
	var doc6 = null;
	if(null == doc6) {
		doc6 = window.document;
	}
	var el6 = doc6.createElement("div");
	var _g17 = 0;
	var _g18 = [{ value : "column right", name : "class"}];
	while(_g17 < _g18.length) {
		var o6 = _g18[_g17];
		++_g17;
		el6.setAttribute(o6.name,o6.value);
	}
	var attrs6 = null;
	if(null != attrs6) {
		var attr12 = attrs6.keys();
		while(attr12.hasNext()) {
			var attr13 = attr12.next();
			el6.setAttribute(attr13,__map_reserved[attr13] != null ? attrs6.getReserved(attr13) : attrs6.h[attr13]);
		}
	}
	var children10 = null;
	if(null != children10) {
		var _g19 = 0;
		while(_g19 < children10.length) {
			var child5 = children10[_g19];
			++_g19;
			el6.appendChild(child5);
		}
	}
	var textContent5 = null;
	if(null != textContent5) {
		el6.appendChild(doc6.createTextNode(textContent5));
	}
	var children11 = el6;
	var doc7 = null;
	if(null == doc7) {
		doc7 = window.document;
	}
	var el7 = doc7.createElement("div");
	var _g20 = 0;
	var _g110 = [{ value : "pane top left", name : "class"}];
	while(_g20 < _g110.length) {
		var o7 = _g110[_g20];
		++_g20;
		el7.setAttribute(o7.name,o7.value);
	}
	var attrs7 = null;
	if(null != attrs7) {
		var attr14 = attrs7.keys();
		while(attr14.hasNext()) {
			var attr15 = attr14.next();
			el7.setAttribute(attr15,__map_reserved[attr15] != null ? attrs7.getReserved(attr15) : attrs7.h[attr15]);
		}
	}
	var children12 = null;
	if(null != children12) {
		var _g21 = 0;
		while(_g21 < children12.length) {
			var child6 = children12[_g21];
			++_g21;
			el7.appendChild(child6);
		}
	}
	var textContent6 = null;
	if(null != textContent6) {
		el7.appendChild(doc7.createTextNode(textContent6));
	}
	var children13 = el7;
	var doc8 = null;
	if(null == doc8) {
		doc8 = window.document;
	}
	var el8 = doc8.createElement("div");
	var _g22 = 0;
	var _g111 = [{ value : "pane top center", name : "class"}];
	while(_g22 < _g111.length) {
		var o8 = _g111[_g22];
		++_g22;
		el8.setAttribute(o8.name,o8.value);
	}
	var attrs8 = null;
	if(null != attrs8) {
		var attr16 = attrs8.keys();
		while(attr16.hasNext()) {
			var attr17 = attr16.next();
			el8.setAttribute(attr17,__map_reserved[attr17] != null ? attrs8.getReserved(attr17) : attrs8.h[attr17]);
		}
	}
	var children14 = null;
	if(null != children14) {
		var _g23 = 0;
		while(_g23 < children14.length) {
			var child7 = children14[_g23];
			++_g23;
			el8.appendChild(child7);
		}
	}
	var textContent7 = null;
	if(null != textContent7) {
		el8.appendChild(doc8.createTextNode(textContent7));
	}
	var children15 = el8;
	var doc9 = null;
	if(null == doc9) {
		doc9 = window.document;
	}
	var el9 = doc9.createElement("div");
	var _g24 = 0;
	var _g112 = [{ value : "pane top right", name : "class"}];
	while(_g24 < _g112.length) {
		var o9 = _g112[_g24];
		++_g24;
		el9.setAttribute(o9.name,o9.value);
	}
	var attrs9 = null;
	if(null != attrs9) {
		var attr18 = attrs9.keys();
		while(attr18.hasNext()) {
			var attr19 = attr18.next();
			el9.setAttribute(attr19,__map_reserved[attr19] != null ? attrs9.getReserved(attr19) : attrs9.h[attr19]);
		}
	}
	var children16 = null;
	if(null != children16) {
		var _g25 = 0;
		while(_g25 < children16.length) {
			var child8 = children16[_g25];
			++_g25;
			el9.appendChild(child8);
		}
	}
	var textContent8 = null;
	if(null != textContent8) {
		el9.appendChild(doc9.createTextNode(textContent8));
	}
	var children17 = el9;
	var doc10 = null;
	if(null == doc10) {
		doc10 = window.document;
	}
	var el10 = doc10.createElement("div");
	var _g26 = 0;
	var _g113 = [{ value : "pane middle left", name : "class"}];
	while(_g26 < _g113.length) {
		var o10 = _g113[_g26];
		++_g26;
		el10.setAttribute(o10.name,o10.value);
	}
	var attrs10 = null;
	if(null != attrs10) {
		var attr20 = attrs10.keys();
		while(attr20.hasNext()) {
			var attr21 = attr20.next();
			el10.setAttribute(attr21,__map_reserved[attr21] != null ? attrs10.getReserved(attr21) : attrs10.h[attr21]);
		}
	}
	var children18 = null;
	if(null != children18) {
		var _g27 = 0;
		while(_g27 < children18.length) {
			var child9 = children18[_g27];
			++_g27;
			el10.appendChild(child9);
		}
	}
	var textContent9 = null;
	if(null != textContent9) {
		el10.appendChild(doc10.createTextNode(textContent9));
	}
	var children19 = el10;
	var doc11 = null;
	if(null == doc11) {
		doc11 = window.document;
	}
	var el11 = doc11.createElement("div");
	var _g28 = 0;
	var _g114 = [{ value : "pane middle center", name : "class"}];
	while(_g28 < _g114.length) {
		var o11 = _g114[_g28];
		++_g28;
		el11.setAttribute(o11.name,o11.value);
	}
	var attrs11 = null;
	if(null != attrs11) {
		var attr22 = attrs11.keys();
		while(attr22.hasNext()) {
			var attr23 = attr22.next();
			el11.setAttribute(attr23,__map_reserved[attr23] != null ? attrs11.getReserved(attr23) : attrs11.h[attr23]);
		}
	}
	var children20 = null;
	if(null != children20) {
		var _g29 = 0;
		while(_g29 < children20.length) {
			var child10 = children20[_g29];
			++_g29;
			el11.appendChild(child10);
		}
	}
	var textContent10 = null;
	if(null != textContent10) {
		el11.appendChild(doc11.createTextNode(textContent10));
	}
	var children21 = el11;
	var doc12 = null;
	if(null == doc12) {
		doc12 = window.document;
	}
	var el12 = doc12.createElement("div");
	var _g30 = 0;
	var _g115 = [{ value : "pane middle right", name : "class"}];
	while(_g30 < _g115.length) {
		var o12 = _g115[_g30];
		++_g30;
		el12.setAttribute(o12.name,o12.value);
	}
	var attrs12 = null;
	if(null != attrs12) {
		var attr24 = attrs12.keys();
		while(attr24.hasNext()) {
			var attr25 = attr24.next();
			el12.setAttribute(attr25,__map_reserved[attr25] != null ? attrs12.getReserved(attr25) : attrs12.h[attr25]);
		}
	}
	var children22 = null;
	if(null != children22) {
		var _g31 = 0;
		while(_g31 < children22.length) {
			var child11 = children22[_g31];
			++_g31;
			el12.appendChild(child11);
		}
	}
	var textContent11 = null;
	if(null != textContent11) {
		el12.appendChild(doc12.createTextNode(textContent11));
	}
	var children23 = el12;
	var doc13 = null;
	if(null == doc13) {
		doc13 = window.document;
	}
	var el13 = doc13.createElement("div");
	var _g32 = 0;
	var _g116 = [{ value : "pane bottom left", name : "class"}];
	while(_g32 < _g116.length) {
		var o13 = _g116[_g32];
		++_g32;
		el13.setAttribute(o13.name,o13.value);
	}
	var attrs13 = null;
	if(null != attrs13) {
		var attr26 = attrs13.keys();
		while(attr26.hasNext()) {
			var attr27 = attr26.next();
			el13.setAttribute(attr27,__map_reserved[attr27] != null ? attrs13.getReserved(attr27) : attrs13.h[attr27]);
		}
	}
	var children24 = null;
	if(null != children24) {
		var _g33 = 0;
		while(_g33 < children24.length) {
			var child12 = children24[_g33];
			++_g33;
			el13.appendChild(child12);
		}
	}
	var textContent12 = null;
	if(null != textContent12) {
		el13.appendChild(doc13.createTextNode(textContent12));
	}
	var children25 = el13;
	var doc14 = null;
	if(null == doc14) {
		doc14 = window.document;
	}
	var el14 = doc14.createElement("div");
	var _g34 = 0;
	var _g117 = [{ value : "pane bottom center", name : "class"}];
	while(_g34 < _g117.length) {
		var o14 = _g117[_g34];
		++_g34;
		el14.setAttribute(o14.name,o14.value);
	}
	var attrs14 = null;
	if(null != attrs14) {
		var attr28 = attrs14.keys();
		while(attr28.hasNext()) {
			var attr29 = attr28.next();
			el14.setAttribute(attr29,__map_reserved[attr29] != null ? attrs14.getReserved(attr29) : attrs14.h[attr29]);
		}
	}
	var children26 = null;
	if(null != children26) {
		var _g35 = 0;
		while(_g35 < children26.length) {
			var child13 = children26[_g35];
			++_g35;
			el14.appendChild(child13);
		}
	}
	var textContent13 = null;
	if(null != textContent13) {
		el14.appendChild(doc14.createTextNode(textContent13));
	}
	var children27 = el14;
	var doc15 = null;
	if(null == doc15) {
		doc15 = window.document;
	}
	var el15 = doc15.createElement("div");
	var _g36 = 0;
	var _g118 = [{ value : "pane bottom right", name : "class"}];
	while(_g36 < _g118.length) {
		var o15 = _g118[_g36];
		++_g36;
		el15.setAttribute(o15.name,o15.value);
	}
	var attrs15 = null;
	if(null != attrs15) {
		var attr30 = attrs15.keys();
		while(attr30.hasNext()) {
			var attr31 = attr30.next();
			el15.setAttribute(attr31,__map_reserved[attr31] != null ? attrs15.getReserved(attr31) : attrs15.h[attr31]);
		}
	}
	var children28 = null;
	if(null != children28) {
		var _g37 = 0;
		while(_g37 < children28.length) {
			var child14 = children28[_g37];
			++_g37;
			el15.appendChild(child14);
		}
	}
	var textContent14 = null;
	if(null != textContent14) {
		el15.appendChild(doc15.createTextNode(textContent14));
	}
	var children29 = [children1,children3,children5,children7,children9,children11,children13,children15,children17,children19,children21,children23,children25,children27,el15];
	if(null != children29) {
		var _g38 = 0;
		while(_g38 < children29.length) {
			var child15 = children29[_g38];
			++_g38;
			el.appendChild(child15);
		}
	}
	var textContent15 = null;
	if(null != textContent15) {
		el.appendChild(doc.createTextNode(textContent15));
	}
	this.el = el;
	dots_Dom.append(parent,this.el);
	this.scrollerV = dots_Query.find(".scroller-v",this.el);
	this.scrollerH = dots_Query.find(".scroller-h",this.el);
	this.top = dots_Query.find(".row.top",this.el);
	this.bottom = dots_Query.find(".row.bottom",this.el);
	this.left = dots_Query.find(".column.left",this.el);
	this.right = dots_Query.find(".column.right",this.el);
	var list = dots_Query.selectNodes(".pane.top",this.el);
	this.tops = Array.prototype.slice.call(list,0);
	var list1 = dots_Query.selectNodes(".pane.bottom",this.el);
	this.bottoms = Array.prototype.slice.call(list1,0);
	var list2 = dots_Query.selectNodes(".pane.left",this.el);
	this.lefts = Array.prototype.slice.call(list2,0);
	var list3 = dots_Query.selectNodes(".pane.right",this.el);
	this.rights = Array.prototype.slice.call(list3,0);
	var list4 = dots_Query.selectNodes(".pane.middle",this.el);
	this.middles = Array.prototype.slice.call(list4,0);
	var list5 = dots_Query.selectNodes(".pane.center",this.el);
	this.centers = Array.prototype.slice.call(list5,0);
	this.topLeft = dots_Query.find(".pane.top.left",this.el);
	this.topCenter = dots_Query.find(".pane.top.center",this.el);
	this.topRight = dots_Query.find(".pane.top.right",this.el);
	this.middleLeft = dots_Query.find(".pane.middle.left",this.el);
	this.middleCenter = dots_Query.find(".pane.middle.center",this.el);
	this.middleRight = dots_Query.find(".pane.middle.right",this.el);
	this.bottomLeft = dots_Query.find(".pane.bottom.left",this.el);
	this.bottomCenter = dots_Query.find(".pane.bottom.center",this.el);
	this.bottomRight = dots_Query.find(".pane.bottom.right",this.el);
	this.size = this.getGridSizeFromContainer();
	this.resizeGrid(this.size.w,this.size.h);
	var _04 = options;
	var t4;
	if(null == _04) {
		t4 = null;
	} else {
		var _14 = _04.topRail;
		if(null == _14) {
			t4 = null;
		} else {
			t4 = _14;
		}
	}
	var _05 = options;
	var t5;
	if(null == _05) {
		t5 = null;
	} else {
		var _15 = _05.bottomRail;
		if(null == _15) {
			t5 = null;
		} else {
			t5 = _15;
		}
	}
	var _06 = options;
	var t6;
	if(null == _06) {
		t6 = null;
	} else {
		var _16 = _06.leftRail;
		if(null == _16) {
			t6 = null;
		} else {
			t6 = _16;
		}
	}
	var _07 = options;
	var t7;
	if(null == _07) {
		t7 = null;
	} else {
		var _17 = _07.rightRail;
		if(null == _17) {
			t7 = null;
		} else {
			t7 = _17;
		}
	}
	this.sizeRails(t4 != null ? t4 : 0,t5 != null ? t5 : 0,t6 != null ? t6 : 0,t7 != null ? t7 : 0);
	this.resizeContent(options.contentWidth,options.contentHeight);
	window.addEventListener("resize",function(_) {
		var s = _gthis.getGridSizeFromContainer();
		_gthis.resizeGrid(s.w,s.h);
		_gthis.resetPosition();
		_gthis.refresh();
		var osize = _gthis.size;
		_gthis.size = s;
		if(_gthis.size.w != osize.w || _gthis.size.h != osize.h) {
			_gthis.onResize(_gthis.size.w,_gthis.size.h,osize.w,osize.h);
		}
	});
	var el16 = this.el;
	el16.addEventListener("wheel",function(e) {
		e.preventDefault();
		_gthis.movePosition(e.deltaX,e.deltaY);
		_gthis.refresh();
	});
	new fancy_core_SwipeMoveHelper(this.el,function(dx,dy) {
		_gthis.movePosition(dx,dy);
		_gthis.refresh();
	});
	new fancy_core_DragMoveHelper(this.scrollerH,function(dx1,_2) {
		var tmp = _gthis.scrollerHDimensions.scrollerToContentPosition(dx1)();
		_gthis.movePosition(tmp,0);
		_gthis.refresh();
	});
	new fancy_core_DragMoveHelper(this.scrollerV,function(_3,dy1) {
		var tmp1 = _gthis.scrollerVDimensions.scrollerToContentPosition(dy1)();
		_gthis.movePosition(0,tmp1);
		_gthis.refresh();
	});
};
fancy_core_Grid9.__name__ = true;
fancy_core_Grid9.prototype = {
	refreshScrollers: function() {
		if(!(this.contentHeight > this.gridHeight)) {
			this.scrollerV.style.display = "none";
		} else {
			this.scrollerV.style.display = "block";
			var pos = this.scrollerVDimensions.contentToScrollerPosition(this.position.y)();
			var size = this.scrollerVDimensions.scrollerSize();
			this.scrollerV.style.top = "" + (this.topRail + pos) + "px";
			this.scrollerV.style.left = "" + (Math.min(this.gridWidth,this.contentWidth) - this.rightRail - this.scrollerSize - this.scrollerMargin) + "px";
			this.scrollerV.style.width = "" + this.scrollerSize + "px";
			this.scrollerV.style.height = "" + size + "px";
		}
		if(!(this.contentWidth > this.gridWidth)) {
			this.scrollerH.style.display = "none";
		} else {
			this.scrollerH.style.display = "block";
			var pos1 = this.scrollerHDimensions.contentToScrollerPosition(this.position.x)();
			var size1 = this.scrollerHDimensions.scrollerSize();
			this.scrollerH.style.left = "" + (this.leftRail + pos1) + "px";
			this.scrollerH.style.top = "" + (Math.min(this.gridHeight,this.contentHeight) - this.bottomRail - this.scrollerSize - this.scrollerMargin) + "px";
			this.scrollerH.style.width = "" + size1 + "px";
			this.scrollerH.style.height = "" + this.scrollerSize + "px";
		}
	}
	,resetPosition: function() {
		this.setPosition(this.position.x,this.position.y,false);
	}
	,movePosition: function(x,y) {
		this.setPosition(this.position.x + x,this.position.y + y,true);
	}
	,setPosition: function(x,y,force) {
		var oldx = this.position.x;
		var oldy = this.position.y;
		this.position.x = x;
		this.position.y = y;
		var limit = Math.max(this.contentWidth - this.gridWidth,0);
		if(this.position.x < 0) {
			this.position.x = 0;
		} else if(this.position.x > limit) {
			this.position.x = limit;
		}
		var limit1 = Math.max(this.contentHeight - this.gridHeight,0);
		if(this.position.y < 0) {
			this.position.y = 0;
		} else if(this.position.y > limit1) {
			this.position.y = limit1;
		}
		if(oldx == this.position.x && oldy == this.position.y) {
			if(force) {
				this.dirty = true;
				this.onRefresh();
			}
		} else {
			this.dirty = true;
			this.onScroll(this.position.x,this.position.y,oldx,oldy);
		}
	}
	,getGridSizeFromContainer: function() {
		return { w : dots_Dom.getOuterWidth(this.el.parentElement), h : dots_Dom.getOuterHeight(this.el.parentElement)};
	}
	,refresh: function() {
		var _gthis = this;
		if(!this.dirty) {
			return;
		}
		this.dirty = false;
		var _e = this.middles;
		(function(effect) {
			thx_Arrays.each(_e,effect);
		})(function(_) {
			return _.style.top = "" + (-_gthis.position.y + _gthis.topRail) + "px";
		});
		var _e1 = this.bottoms;
		(function(effect1) {
			thx_Arrays.each(_e1,effect1);
		})(function(_1) {
			return _1.style.top = "" + (Math.min(_gthis.gridHeight,_gthis.contentHeight) - _gthis.bottomRail) + "px";
		});
		this.bottom.style.top = "" + (Math.min(this.gridHeight,this.contentHeight) - this.bottomRail) + "px";
		var _e2 = this.centers;
		(function(effect2) {
			thx_Arrays.each(_e2,effect2);
		})(function(_2) {
			return _2.style.left = "" + (-_gthis.position.x + _gthis.leftRail) + "px";
		});
		var _e3 = this.rights;
		(function(effect3) {
			thx_Arrays.each(_e3,effect3);
		})(function(_3) {
			return _3.style.left = "" + (Math.min(_gthis.gridWidth,_gthis.contentWidth) - _gthis.rightRail) + "px";
		});
		this.right.style.left = "" + (Math.min(this.gridWidth,this.contentWidth) - this.rightRail) + "px";
		dots_Dom.toggleClass(this.top,"overlay-bottom",this.position.y > 0 || this.gridHeight < this.topRail + this.bottomRail);
		dots_Dom.toggleClass(this.bottom,"overlay-top",this.contentHeight > this.gridHeight && this.position.y < this.contentHeight - this.gridHeight);
		dots_Dom.toggleClass(this.left,"overlay-right",this.position.x > 0 || this.gridWidth < this.leftRail + this.rightRail);
		dots_Dom.toggleClass(this.right,"overlay-left",this.contentWidth > this.gridWidth && this.position.x < this.contentWidth - this.gridWidth);
		this.refreshScrollers();
	}
	,resizeGrid: function(width,height) {
		if(this.gridWidth == width && this.gridHeight == height) {
			return;
		}
		this.dirty = true;
		this.gridWidth = width;
		this.gridHeight = height;
		this.top.style.width = this.bottom.style.width = "" + Math.min(this.gridWidth,this.contentWidth) + "px";
		this.left.style.height = this.right.style.height = "" + Math.min(this.gridHeight,this.contentHeight) + "px";
	}
	,resizeContent: function(width,height) {
		var _gthis = this;
		if(this.contentWidth == width && this.contentHeight == height) {
			return;
		}
		this.dirty = true;
		this.contentWidth = width;
		this.contentHeight = height;
		this.top.style.width = this.bottom.style.width = "" + Math.min(this.gridWidth,this.contentWidth) + "px";
		this.left.style.height = this.right.style.height = "" + Math.min(this.gridHeight,this.contentHeight) + "px";
		var _e = this.middles;
		(function(effect) {
			thx_Arrays.each(_e,effect);
		})(function(_) {
			return _.style.height = "" + (_gthis.contentHeight - _gthis.topRail - _gthis.bottomRail) + "px";
		});
		var _e1 = this.centers;
		(function(effect1) {
			thx_Arrays.each(_e1,effect1);
		})(function(_1) {
			return _1.style.width = "" + (_gthis.contentWidth - _gthis.leftRail - _gthis.rightRail) + "px";
		});
	}
	,sizeRails: function(topRail,bottomRail,leftRail,rightRail) {
		if(this.topRail == topRail && this.bottomRail == bottomRail && this.leftRail == leftRail && this.rightRail == rightRail) {
			return;
		}
		this.dirty = true;
		this.topRail = topRail;
		this.bottomRail = bottomRail;
		this.leftRail = leftRail;
		this.rightRail = rightRail;
		this.top.style.height = "" + topRail + "px";
		var _e = this.tops;
		(function(effect) {
			thx_Arrays.each(_e,effect);
		})(function(_) {
			return _.style.height = "" + topRail + "px";
		});
		this.bottom.style.height = "" + bottomRail + "px";
		var _e1 = this.bottoms;
		(function(effect1) {
			thx_Arrays.each(_e1,effect1);
		})(function(_1) {
			return _1.style.height = "" + bottomRail + "px";
		});
		this.left.style.width = "" + leftRail + "px";
		var _e2 = this.lefts;
		(function(effect2) {
			thx_Arrays.each(_e2,effect2);
		})(function(_2) {
			return _2.style.width = "" + leftRail + "px";
		});
		this.right.style.width = "" + rightRail + "px";
		var _e3 = this.rights;
		(function(effect3) {
			thx_Arrays.each(_e3,effect3);
		})(function(_3) {
			return _3.style.width = "" + rightRail + "px";
		});
	}
	,get_gridMiddleHeight: function() {
		return this.gridHeight - this.topRail - this.bottomRail;
	}
	,get_gridCenterWidth: function() {
		return this.gridWidth - this.leftRail - this.rightRail;
	}
	,__class__: fancy_core_Grid9
};
var fancy_core_IntCache = function() {
	this.cache = [];
};
fancy_core_IntCache.__name__ = true;
fancy_core_IntCache.prototype = {
	invalidate: function() {
		this.cache = [];
	}
	,__class__: fancy_core_IntCache
};
var fancy_core__$Lazy_Lazy_$Impl_$ = {};
fancy_core__$Lazy_Lazy_$Impl_$.__name__ = true;
fancy_core__$Lazy_Lazy_$Impl_$.map = function(this1,f) {
	return function() {
		var tmp = this1();
		return f(tmp);
	};
};
fancy_core__$Lazy_Lazy_$Impl_$.subtract = function(l1,l2) {
	return function() {
		return l1() - l2();
	};
};
fancy_core__$Lazy_Lazy_$Impl_$.multiply = function(l1,l2) {
	return function() {
		return l1() * l2();
	};
};
fancy_core__$Lazy_Lazy_$Impl_$.divideFromFloat = function(v1,l2) {
	return function() {
		return v1 / l2();
	};
};
var fancy_core_LazyFloatExtensions = function() { };
fancy_core_LazyFloatExtensions.__name__ = true;
fancy_core_LazyFloatExtensions.min = function(l1,l2) {
	return function() {
		return Math.min(l1(),l2());
	};
};
fancy_core_LazyFloatExtensions.max = function(l1,l2) {
	return function() {
		return Math.max(l1(),l2());
	};
};
var fancy_core_PositionCache = function() {
	this.cache = [];
};
fancy_core_PositionCache.__name__ = true;
fancy_core_PositionCache.prototype = {
	get: function(row,col) {
		var r = this.cache[row];
		if(null == r) {
			return null;
		}
		return r[col];
	}
	,set: function(row,col,value) {
		var r = this.cache[row];
		if(null == r) {
			r = this.cache[row] = [];
		}
		r[col] = value;
	}
	,remove: function(row,col) {
		var r = this.cache[row];
		if(null == r) {
			return;
		}
		r[col] = null;
	}
	,invalidate: function() {
		this.cache = [];
	}
	,__class__: fancy_core_PositionCache
};
var fancy_core_ScrollerDimensions = function(opt) {
	var _gthis = this;
	this.viewSize = opt.viewSize;
	this.contentSize = opt.contentSize;
	this.scrollerArea = opt.scrollerArea;
	var minScrollerSize = null == opt.minScrollerSize ? function() {
		return 0.0;
	} : fancy_core_LazyFloatExtensions.max(opt.minScrollerSize,function() {
		return 0.0;
	});
	var maxScrollerSize;
	if(null == opt.maxScrollerSize) {
		var v = Infinity;
		maxScrollerSize = function() {
			return v;
		};
	} else {
		maxScrollerSize = fancy_core__$Lazy_Lazy_$Impl_$.map(opt.maxScrollerSize,function(v1) {
			if(v1 < 0.0) {
				return Infinity;
			} else {
				return v1;
			}
		});
	}
	this.proportionalScrollerSize = function() {
		return _gthis.viewSize() / _gthis.contentSize() * _gthis.scrollerArea();
	};
	this.scrollerSize = fancy_core_LazyFloatExtensions.min(fancy_core_LazyFloatExtensions.max(this.proportionalScrollerSize,minScrollerSize),maxScrollerSize);
};
fancy_core_ScrollerDimensions.__name__ = true;
fancy_core_ScrollerDimensions.prototype = {
	scrollerPositionAsPercent: function(position) {
		return fancy_core__$Lazy_Lazy_$Impl_$.divideFromFloat(position,fancy_core__$Lazy_Lazy_$Impl_$.subtract(this.scrollerArea,this.scrollerSize));
	}
	,contentPositionAsPercent: function(position) {
		return fancy_core__$Lazy_Lazy_$Impl_$.divideFromFloat(position,fancy_core__$Lazy_Lazy_$Impl_$.subtract(this.contentSize,this.viewSize));
	}
	,scrollerToContentPosition: function(position) {
		return fancy_core__$Lazy_Lazy_$Impl_$.multiply(this.scrollerPositionAsPercent(position),fancy_core__$Lazy_Lazy_$Impl_$.subtract(this.contentSize,this.viewSize));
	}
	,contentToScrollerPosition: function(position) {
		return fancy_core__$Lazy_Lazy_$Impl_$.multiply(this.contentPositionAsPercent(position),fancy_core__$Lazy_Lazy_$Impl_$.subtract(this.scrollerArea,this.scrollerSize));
	}
	,__class__: fancy_core_ScrollerDimensions
};
var fancy_core_Search = function() { };
fancy_core_Search.__name__ = true;
fancy_core_Search.binary = function(min,max,comparator) {
	if(min > max) {
		var temp = max;
		max = min;
		min = temp;
	}
	var mid = function(l,r) {
		return (l + r) / 2 | 0;
	};
	var search = null;
	search = function(m,l1,r1) {
		var c = comparator(m);
		if(c < 0) {
			l1 = m + 1;
			if(l1 == r1) {
				return l1;
			} else {
				var search1 = mid(l1,r1);
				return search(search1,l1,r1);
			}
		} else if(c > 0) {
			r1 = m - 1;
			if(r1 == l1) {
				return r1;
			} else {
				var search2 = mid(l1,r1);
				return search(search2,l1,r1);
			}
		} else {
			return m;
		}
	};
	var search3 = search;
	return search3(mid(min,max),min,max);
};
var fancy_core_SwipeMoveHelper = function(el,callback) {
	var _gthis = this;
	this.el = el;
	el.addEventListener("touchmove",function(e) {
		e.preventDefault();
		_gthis.apply(e,function(t) {
			var dx = t.clientX - _gthis.x;
			var dy = t.clientY - _gthis.y;
			_gthis.x = t.clientX;
			_gthis.y = t.clientY;
			callback(-dx,-dy);
		});
	});
	el.addEventListener("touchstart",function(e1) {
		if(null != _gthis.id) {
			return;
		}
		var t1 = e1.touches[0];
		_gthis.id = t1.identifier;
		_gthis.x = t1.clientX;
		_gthis.y = t1.clientY;
	});
	el.addEventListener("touchend",function(e2) {
		if(e2.touches.length == 0) {
			_gthis.id = null;
		} else {
			_gthis.apply(e2,function(_) {
				_gthis.id = null;
			});
		}
	});
};
fancy_core_SwipeMoveHelper.__name__ = true;
fancy_core_SwipeMoveHelper.prototype = {
	apply: function(e,f) {
		var _g = 0;
		var _g1 = e.touches;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			if(t.identifier == this.id) {
				f(t);
				break;
			}
		}
	}
	,__class__: fancy_core_SwipeMoveHelper
};
var fancy_table_CellEvent = function(table,coords) {
	this.table = table;
	this.coords = coords;
};
fancy_table_CellEvent.__name__ = true;
fancy_table_CellEvent.prototype = {
	__class__: fancy_table_CellEvent
};
var fancy_table_Coords = function(row,col) {
	this.set_row(row);
	this.set_col(col);
};
fancy_table_Coords.__name__ = true;
fancy_table_Coords.prototype = {
	matches: function(row,col) {
		if(this.get_row() == row) {
			return this.get_col() == col;
		} else {
			return false;
		}
	}
	,equals: function(b) {
		if(this.get_row() == b.get_row()) {
			return this.get_col() == b.get_col();
		} else {
			return false;
		}
	}
	,get_row: function() {
		return this.row;
	}
	,get_col: function() {
		return this.col;
	}
	,set_row: function(v) {
		return this.row = v;
	}
	,set_col: function(v) {
		return this.col = v;
	}
	,__class__: fancy_table_Coords
};
var fancy_table_FancyTableSettings = function(fixedTop,fixedLeft,fallbackCell,classes,hSize,initialX,initialY,selectionEnabled,rangeSelectionEnabled,focusOnHover,alwaysFocused,onScroll,onResize,onFocus,onBlur,onKey,onClick,onDoubleClick,onRangeChange) {
	this.fixedTop = fixedTop;
	this.fixedLeft = fixedLeft;
	this.fallbackCell = fallbackCell;
	this.classes = classes;
	this.hSize = hSize;
	this.initialScrollX = initialX;
	this.initialScrollY = initialY;
	this.selectionEnabled = selectionEnabled;
	this.rangeSelectionEnabled = rangeSelectionEnabled;
	this.focusOnHover = focusOnHover;
	this.alwaysFocused = alwaysFocused;
	this.onScroll = onScroll;
	this.onResize = onResize;
	this.onFocus = onFocus;
	this.onBlur = onBlur;
	this.onKey = onKey;
	this.onDoubleClick = onDoubleClick;
	this.onClick = onClick;
	this.onRangeChange = onRangeChange;
};
fancy_table_FancyTableSettings.__name__ = true;
fancy_table_FancyTableSettings.classesFromOptions = function(opts) {
	if(opts == null) {
		opts = { };
	}
	return { cellContent : opts.cellContent != null ? opts.cellContent : "ft-cell-content", rowExpanded : opts.rowExpanded != null ? opts.rowExpanded : "ft-row-expanded", rowCollapsed : opts.rowCollapsed != null ? opts.rowCollapsed : "ft-row-collapsed", rowFoldHeader : opts.rowFoldHeader != null ? opts.rowFoldHeader : "ft-row-fold-header", rowIndent : opts.rowIndent != null ? opts.rowIndent : "ft-row-indent-", cellActive : opts.cellActive != null ? opts.cellActive : "ft-cell-active", cellSelected : opts.cellSelected != null ? opts.cellSelected : "ft-cell-selected", cellSelectedTop : opts.cellSelectedTop != null ? opts.cellSelectedTop : "ft-cell-selected-top", cellSelectedRight : opts.cellSelectedRight != null ? opts.cellSelectedRight : "ft-cell-selected-right", cellSelectedBottom : opts.cellSelectedBottom != null ? opts.cellSelectedBottom : "ft-cell-selected-bottom", cellSelectedLeft : opts.cellSelectedLeft != null ? opts.cellSelectedLeft : "ft-cell-selected-left"};
};
fancy_table_FancyTableSettings.fromOptions = function(opts) {
	if(opts == null) {
		opts = { };
	}
	var _0 = opts;
	var t;
	if(null == _0) {
		t = null;
	} else {
		var _1 = _0.fixedTop;
		if(null == _1) {
			t = null;
		} else {
			t = _1;
		}
	}
	var fixedTop = t != null ? t : 0;
	var _01 = opts;
	var t1;
	if(null == _01) {
		t1 = null;
	} else {
		var _11 = _01.fixedLeft;
		if(null == _11) {
			t1 = null;
		} else {
			t1 = _11;
		}
	}
	var fixedLeft = t1 != null ? t1 : 0;
	var _02 = opts;
	var t2;
	if(null == _02) {
		t2 = null;
	} else {
		var _12 = _02.fallbackCell;
		if(null == _12) {
			t2 = null;
		} else {
			t2 = _12;
		}
	}
	var tmp = t2 != null ? t2 : fancy_table_util__$CellContent_CellContent_$Impl_$.fromString("");
	var tmp1 = fancy_table_FancyTableSettings.classesFromOptions(opts.classes);
	var _03 = opts;
	var t3;
	if(null == _03) {
		t3 = null;
	} else {
		var _13 = _03.hSize;
		if(null == _13) {
			t3 = null;
		} else {
			t3 = _13;
		}
	}
	var _04 = opts;
	var t4;
	if(null == _04) {
		t4 = null;
	} else {
		var _14 = _04.initialScrollX;
		if(null == _14) {
			t4 = null;
		} else {
			t4 = _14;
		}
	}
	var _05 = opts;
	var t5;
	if(null == _05) {
		t5 = null;
	} else {
		var _15 = _05.initialScrollY;
		if(null == _15) {
			t5 = null;
		} else {
			t5 = _15;
		}
	}
	var _06 = opts;
	var t6;
	if(null == _06) {
		t6 = null;
	} else {
		var _16 = _06.selectionEnabled;
		if(null == _16) {
			t6 = null;
		} else {
			t6 = _16;
		}
	}
	var _07 = opts;
	var t7;
	if(null == _07) {
		t7 = null;
	} else {
		var _17 = _07.rangeSelectionEnabled;
		if(null == _17) {
			t7 = null;
		} else {
			t7 = _17;
		}
	}
	var _08 = opts;
	var t8;
	if(null == _08) {
		t8 = null;
	} else {
		var _18 = _08.focusOnHover;
		if(null == _18) {
			t8 = null;
		} else {
			t8 = _18;
		}
	}
	var _09 = opts;
	var t9;
	if(null == _09) {
		t9 = null;
	} else {
		var _19 = _09.alwaysFocused;
		if(null == _19) {
			t9 = null;
		} else {
			t9 = _19;
		}
	}
	var _010 = opts;
	var t10;
	if(null == _010) {
		t10 = null;
	} else {
		var _110 = _010.onScroll;
		if(null == _110) {
			t10 = null;
		} else {
			t10 = _110;
		}
	}
	var _011 = opts;
	var t11;
	if(null == _011) {
		t11 = null;
	} else {
		var _111 = _011.onResize;
		if(null == _111) {
			t11 = null;
		} else {
			t11 = _111;
		}
	}
	var _012 = opts;
	var t12;
	if(null == _012) {
		t12 = null;
	} else {
		var _112 = _012.onFocus;
		if(null == _112) {
			t12 = null;
		} else {
			t12 = _112;
		}
	}
	var _013 = opts;
	var t13;
	if(null == _013) {
		t13 = null;
	} else {
		var _113 = _013.onBlur;
		if(null == _113) {
			t13 = null;
		} else {
			t13 = _113;
		}
	}
	var _014 = opts;
	var t14;
	if(null == _014) {
		t14 = null;
	} else {
		var _114 = _014.onKey;
		if(null == _114) {
			t14 = null;
		} else {
			t14 = _114;
		}
	}
	var _015 = opts;
	var t15;
	if(null == _015) {
		t15 = null;
	} else {
		var _115 = _015.onClick;
		if(null == _115) {
			t15 = null;
		} else {
			t15 = _115;
		}
	}
	var _016 = opts;
	var t16;
	if(null == _016) {
		t16 = null;
	} else {
		var _116 = _016.onDoubleClick;
		if(null == _116) {
			t16 = null;
		} else {
			t16 = _116;
		}
	}
	var _017 = opts;
	var t17;
	if(null == _017) {
		t17 = null;
	} else {
		var _117 = _017.onRangeChange;
		if(null == _117) {
			t17 = null;
		} else {
			t17 = _117;
		}
	}
	return new fancy_table_FancyTableSettings(fixedTop,fixedLeft,tmp,tmp1,t3 != null ? t3 : function(_,_2) {
		return fancy_CellDimension.RenderSmart;
	},t4 != null ? t4 : fancy_HorizontalScrollPosition.Left,t5 != null ? t5 : fancy_VerticalScrollPosition.Top,t6 != null ? t6 : true,t7 != null ? t7 : true,t8 != null ? t8 : true,t9 != null && t9,t10 != null ? t10 : function(_3) {
	},t11 != null ? t11 : function(_4) {
	},t12 != null ? t12 : function(_5) {
	},t13 != null ? t13 : function(_6) {
	},t14 != null ? t14 : function(_7) {
	},t15 != null ? t15 : function(_8) {
	},t16 != null ? t16 : function(_9) {
	},t17 != null ? t17 : function(_10) {
	});
};
fancy_table_FancyTableSettings.prototype = {
	__class__: fancy_table_FancyTableSettings
};
var fancy_table_KeyEvent = function(table,key,stopPropagation,preventDefault,defaultPrevented) {
	this.table = table;
	this.key = key;
	this.stopPropagation = stopPropagation;
	this.preventDefault = preventDefault;
	this.defaultPrevented = defaultPrevented;
};
fancy_table_KeyEvent.__name__ = true;
fancy_table_KeyEvent.fromKeyboardEvent = function(table,e) {
	var keyWithModifiers = dots_Keys.getKeyAndModifiers(e);
	return new fancy_table_KeyEvent(table,keyWithModifiers,$bind(e,e.stopPropagation),$bind(e,e.preventDefault),function() {
		return e.defaultPrevented;
	});
};
fancy_table_KeyEvent.prototype = {
	isCmdOnMacOrCtrl: function() {
		var meta = thx_Arrays.any(this.key.modifiers,function(m) {
			if(m[1] == 3) {
				return true;
			} else {
				return false;
			}
		});
		var ctrl = thx_Arrays.any(this.key.modifiers,function(m1) {
			if(m1[1] == 2) {
				return true;
			} else {
				return false;
			}
		});
		if(!ctrl && !meta) {
			return false;
		}
		if(!(fancy_table_KeyEvent.isMac && meta)) {
			if(!fancy_table_KeyEvent.isMac) {
				return ctrl;
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,get_coords: function() {
		return thx_Options.map(this.table.selection,function(range) {
			return range.active;
		});
	}
	,__class__: fancy_table_KeyEvent
};
var fancy_table_Range = function(min,max) {
	this.min = min;
	this.max = max;
	this.active = new fancy_table_ActiveCoords(this,min.get_row(),min.get_col());
};
fancy_table_Range.__name__ = true;
fancy_table_Range.prototype = {
	contains: function(row,col) {
		if(row >= this.min.get_row() && row <= this.max.get_row() && col >= this.min.get_col()) {
			return col <= this.max.get_col();
		} else {
			return false;
		}
	}
	,isActive: function(row,col) {
		return this.active.matches(row,col);
	}
	,isOnLeft: function(col) {
		return this.min.get_col() == col;
	}
	,isOnRight: function(col) {
		return this.max.get_col() == col;
	}
	,isOnTop: function(row) {
		return this.min.get_row() == row;
	}
	,isOnBottom: function(row) {
		return this.max.get_row() == row;
	}
	,next: function() {
		if(this.rows() == 1 && this.cols() == 1) {
			return this.down();
		}
		if(this.activeRow() == this.rows() - 1 && this.activeCol() == this.cols() - 1) {
			var range = new fancy_table_Range(this.min,this.max);
			range.active.set_row(this.min.get_row());
			range.active.set_col(this.min.get_col());
			return range;
		} else if(this.activeRow() < this.rows() - 1) {
			var range1 = new fancy_table_Range(this.min,this.max);
			range1.active.set_row(this.active.get_row() + 1);
			range1.active.set_col(this.active.get_col());
			return range1;
		} else {
			var range2 = new fancy_table_Range(this.min,this.max);
			range2.active.set_row(this.min.get_row());
			range2.active.set_col(this.active.get_col() + 1);
			return range2;
		}
	}
	,previous: function() {
		if(this.rows() == 1 && this.cols() == 1) {
			return this.up();
		}
		if(this.activeRow() == 0 && this.activeCol() == 0) {
			var range = new fancy_table_Range(this.min,this.max);
			range.active.set_row(this.max.get_row());
			range.active.set_col(this.max.get_col());
			return range;
		} else if(this.activeRow() > 0) {
			var range1 = new fancy_table_Range(this.min,this.max);
			range1.active.set_row(this.active.get_row() - 1);
			range1.active.set_col(this.active.get_col());
			return range1;
		} else {
			var range2 = new fancy_table_Range(this.min,this.max);
			range2.active.set_row(this.max.get_row());
			range2.active.set_col(this.active.get_col() - 1);
			return range2;
		}
	}
	,nextHorizontal: function() {
		if(this.rows() == 1 && this.cols() == 1) {
			return this.right();
		}
		if(this.activeRow() == this.rows() - 1 && this.activeCol() == this.cols() - 1) {
			var range = new fancy_table_Range(this.min,this.max);
			range.active.set_row(this.min.get_row());
			range.active.set_col(this.min.get_col());
			return range;
		} else if(this.activeCol() == this.cols() - 1) {
			var range1 = new fancy_table_Range(this.min,this.max);
			range1.active.set_row(this.active.get_row() + 1);
			range1.active.set_col(this.min.get_col());
			return range1;
		} else {
			var range2 = new fancy_table_Range(this.min,this.max);
			range2.active.set_row(this.active.get_row());
			range2.active.set_col(this.active.get_col() + 1);
			return range2;
		}
	}
	,previousHorizontal: function() {
		if(this.rows() == 1 && this.cols() == 1) {
			return this.left();
		}
		if(this.activeRow() == 0 && this.activeCol() == 0) {
			var range = new fancy_table_Range(this.min,this.max);
			range.active.set_row(this.max.get_row());
			range.active.set_col(this.max.get_col());
			return range;
		} else if(this.activeCol() == 0) {
			var range1 = new fancy_table_Range(this.min,this.max);
			range1.active.set_row(this.active.get_row() - 1);
			range1.active.set_col(this.max.get_col());
			return range1;
		} else {
			var range2 = new fancy_table_Range(this.min,this.max);
			range2.active.set_row(this.active.get_row());
			range2.active.set_col(this.active.get_col() - 1);
			return range2;
		}
	}
	,left: function() {
		var coord = new fancy_table_Coords(this.active.get_row(),this.active.get_col() - 1);
		return new fancy_table_Range(coord,coord);
	}
	,right: function() {
		var coord = new fancy_table_Coords(this.active.get_row(),this.active.get_col() + 1);
		return new fancy_table_Range(coord,coord);
	}
	,up: function() {
		var coord = new fancy_table_Coords(this.active.get_row() - 1,this.active.get_col());
		return new fancy_table_Range(coord,coord);
	}
	,down: function() {
		var coord = new fancy_table_Coords(this.active.get_row() + 1,this.active.get_col());
		return new fancy_table_Range(coord,coord);
	}
	,firstColumn: function() {
		return this.goToColumn(0);
	}
	,goToColumn: function(col) {
		var coord = new fancy_table_Coords(this.active.get_row(),col);
		return new fancy_table_Range(coord,coord);
	}
	,firstRow: function() {
		return this.goToRow(0);
	}
	,upRows: function(row) {
		var b = this.active.get_row() - row;
		var start = 0 > b ? 0 : b;
		return this.goToRow(start);
	}
	,downRows: function(row,max) {
		var b = this.active.get_row() + row;
		var end = max < b ? max : b;
		return this.goToRow(end);
	}
	,goToRow: function(row) {
		var coord = new fancy_table_Coords(row,this.active.get_col());
		return new fancy_table_Range(coord,coord);
	}
	,selectToFirstColumn: function() {
		return this.selectToColumn(0);
	}
	,selectCurrentToCell: function(row,col) {
		var b = this.active.get_row();
		var minRow = row < b ? row : b;
		var b1 = this.active.get_col();
		var minCol = col < b1 ? col : b1;
		var b2 = this.active.get_row();
		var maxRow = row > b2 ? row : b2;
		var b3 = this.active.get_col();
		var maxCol = col > b3 ? col : b3;
		var range = new fancy_table_Range(new fancy_table_Coords(minRow,minCol),new fancy_table_Coords(maxRow,maxCol));
		range.active.set_row(this.active.get_row());
		range.active.set_col(this.active.get_col());
		return range;
	}
	,selectToColumn: function(col) {
		if(this.active.get_col() == col) {
			return this;
		}
		var range = col < this.active.get_col() ? new fancy_table_Range(new fancy_table_Coords(this.min.get_row(),col),this.max) : new fancy_table_Range(this.min,new fancy_table_Coords(this.max.get_row(),col));
		range.active.set_row(this.active.get_row());
		range.active.set_col(this.active.get_col());
		return range;
	}
	,selectToFirstRow: function() {
		return this.selectToRow(0);
	}
	,selectToRow: function(row) {
		if(this.active.get_row() == row) {
			return this;
		}
		var range = row < this.active.get_row() ? new fancy_table_Range(new fancy_table_Coords(row,this.min.get_col()),this.max) : new fancy_table_Range(this.min,new fancy_table_Coords(row,this.max.get_col()));
		range.active.set_row(this.active.get_row());
		range.active.set_col(this.active.get_col());
		return range;
	}
	,selectLeft: function() {
		var range = this.cols() == 1 || this.activeCol() > 0 ? new fancy_table_Range(new fancy_table_Coords(this.min.get_row(),this.min.get_col() - 1),this.max) : new fancy_table_Range(this.min,new fancy_table_Coords(this.max.get_row(),this.max.get_col() - 1));
		range.active.set_row(this.active.get_row());
		range.active.set_col(this.active.get_col());
		return range;
	}
	,selectRight: function() {
		var range = this.cols() == 1 || this.activeCol() < this.cols() - 1 ? new fancy_table_Range(this.min,new fancy_table_Coords(this.max.get_row(),this.max.get_col() + 1)) : new fancy_table_Range(new fancy_table_Coords(this.min.get_row(),this.min.get_col() + 1),this.max);
		range.active.set_row(this.active.get_row());
		range.active.set_col(this.active.get_col());
		return range;
	}
	,selectUp: function() {
		var range = this.rows() == 1 || this.activeRow() > 0 ? new fancy_table_Range(new fancy_table_Coords(this.min.get_row() - 1,this.min.get_col()),this.max) : new fancy_table_Range(this.min,new fancy_table_Coords(this.max.get_row() - 1,this.max.get_col()));
		range.active.set_row(this.active.get_row());
		range.active.set_col(this.active.get_col());
		return range;
	}
	,selectUpRows: function(rows) {
		var b = this.active.get_row() - rows;
		var start = 0 > b ? 0 : b;
		return this.selectToRow(start);
	}
	,selectDownRows: function(rows,max) {
		var b = this.active.get_row() + rows;
		var end = max < b ? max : b;
		return this.selectToRow(end);
	}
	,selectDown: function() {
		var range = this.rows() == 1 || this.activeRow() < this.rows() - 1 ? new fancy_table_Range(this.min,new fancy_table_Coords(this.max.get_row() + 1,this.max.get_col())) : new fancy_table_Range(new fancy_table_Coords(this.min.get_row() + 1,this.min.get_col()),this.max);
		range.active.set_row(this.active.get_row());
		range.active.set_col(this.active.get_col());
		return range;
	}
	,rows: function() {
		return this.max.get_row() - this.min.get_row() + 1;
	}
	,cols: function() {
		return this.max.get_col() - this.min.get_col() + 1;
	}
	,activeRow: function() {
		return this.active.get_row() - this.min.get_row();
	}
	,activeCol: function() {
		return this.active.get_col() - this.min.get_col();
	}
	,equals: function(b) {
		if(this.min.equals(b.min) && this.max.equals(b.max)) {
			return this.active.equals(b.active);
		} else {
			return false;
		}
	}
	,__class__: fancy_table_Range
};
var fancy_table_ActiveCoords = function(range,row,col) {
	this.range = range;
	fancy_table_Coords.call(this,row,col);
};
fancy_table_ActiveCoords.__name__ = true;
fancy_table_ActiveCoords.__super__ = fancy_table_Coords;
fancy_table_ActiveCoords.prototype = $extend(fancy_table_Coords.prototype,{
	set_row: function(v) {
		if(v < this.range.min.get_row()) {
			v = this.range.min.get_row();
		} else if(v > this.range.max.get_row()) {
			v = this.range.max.get_row();
		}
		return fancy_table_Coords.prototype.set_row.call(this,v);
	}
	,set_col: function(v) {
		if(v < this.range.min.get_col()) {
			v = this.range.min.get_col();
		} else if(v > this.range.max.get_col()) {
			v = this.range.max.get_col();
		}
		return fancy_table_Coords.prototype.set_col.call(this,v);
	}
	,__class__: fancy_table_ActiveCoords
});
var fancy_table_RangeEvent = function(table,oldRange,newRange) {
	this.table = table;
	this.oldRange = oldRange;
	this.newRange = newRange;
};
fancy_table_RangeEvent.__name__ = true;
fancy_table_RangeEvent.prototype = {
	__class__: fancy_table_RangeEvent
};
var fancy_table_ResizeEvent = function(table,width,height,oldWidth,oldHeight) {
	this.table = table;
	this.width = width;
	this.height = height;
	this.oldWidth = oldWidth;
	this.oldHeight = oldHeight;
};
fancy_table_ResizeEvent.__name__ = true;
fancy_table_ResizeEvent.prototype = {
	__class__: fancy_table_ResizeEvent
};
var fancy_table_Row = function(table,cells,classSettings,height,customClasses,expanded,indentation) {
	if(indentation == null) {
		indentation = 0;
	}
	if(expanded == null) {
		expanded = true;
	}
	this.rows = [];
	this.table = table;
	this.cells = cells;
	this.classSettings = classSettings;
	this.height = height;
	this.customClasses = customClasses != null ? customClasses : [];
	this.expanded = expanded;
	this.indentation = indentation;
};
fancy_table_Row.__name__ = true;
fancy_table_Row.prototype = {
	getClasses: function() {
		var classes = [this.classSettings.rowIndent + Std.string(this.indentation)].concat(this.customClasses);
		if(this.rows.length > 0) {
			classes.push(this.classSettings.rowFoldHeader);
			classes.push(this.expanded ? this.classSettings.rowExpanded : this.classSettings.rowCollapsed);
		}
		return classes;
	}
	,renderCell: function(table,row,col,classes) {
		var _gthis = this;
		return thx_Options.map(thx_Arrays.getOption(this.cells,col),function(cell) {
			var tmp = fancy_table_util__$CellContent_CellContent_$Impl_$.render(cell,_gthis.classSettings.cellContent,table,row,col);
			return _gthis.renderCellContainer(classes,tmp,row,col);
		});
	}
	,renderCellContainer: function(classes,content,row,col) {
		var _g = this.table.selection;
		var classes1;
		switch(_g[1]) {
		case 0:
			var range = _g[2];
			var buff = [];
			if(range.contains(row,col)) {
				if(range.isActive(row,col)) {
					buff.push(this.classSettings.cellActive);
				}
				buff.push(this.classSettings.cellSelected);
				if(range.isOnTop(row)) {
					buff.push(this.classSettings.cellSelectedTop);
				}
				if(range.isOnRight(col)) {
					buff.push(this.classSettings.cellSelectedRight);
				}
				if(range.isOnBottom(row)) {
					buff.push(this.classSettings.cellSelectedBottom);
				}
				if(range.isOnLeft(col)) {
					buff.push(this.classSettings.cellSelectedLeft);
				}
			}
			classes1 = buff;
			break;
		case 1:
			classes1 = [];
			break;
		}
		var classes2 = classes1.concat(classes);
		var doc = null;
		if(null == doc) {
			doc = window.document;
		}
		var el = doc.createElement("div");
		var _g2 = 0;
		var _g3 = [];
		while(_g2 < _g3.length) {
			var o = _g3[_g2];
			++_g2;
			el.setAttribute(o.name,o.value);
		}
		var _g21 = new haxe_ds_StringMap();
		var value = this.getClasses().concat(classes2).join(" ");
		if(__map_reserved["class"] != null) {
			_g21.setReserved("class",value);
		} else {
			_g21.h["class"] = value;
		}
		var attrs = _g21;
		if(null != attrs) {
			var attr = attrs.keys();
			while(attr.hasNext()) {
				var attr1 = attr.next();
				el.setAttribute(attr1,__map_reserved[attr1] != null ? attrs.getReserved(attr1) : attrs.h[attr1]);
			}
		}
		var children = [content];
		if(null != children) {
			var _g31 = 0;
			while(_g31 < children.length) {
				var child = children[_g31];
				++_g31;
				el.appendChild(child);
			}
		}
		var textContent = null;
		if(null != textContent) {
			el.appendChild(doc.createTextNode(textContent));
		}
		return el;
	}
	,toggle: function() {
		this.expanded = !this.expanded;
	}
	,__class__: fancy_table_Row
};
var fancy_table_ScrollEvent = function(table,x,y,oldX,oldY) {
	this.table = table;
	this.x = x;
	this.y = y;
	this.oldX = oldX;
	this.oldY = oldY;
};
fancy_table_ScrollEvent.__name__ = true;
fancy_table_ScrollEvent.prototype = {
	__class__: fancy_table_ScrollEvent
};
var fancy_table_util_CellContentImpl = { __ename__ : true, __constructs__ : ["RawValue","LazyElement","Element"] };
fancy_table_util_CellContentImpl.RawValue = function(v) { var $x = ["RawValue",0,v]; $x.__enum__ = fancy_table_util_CellContentImpl; $x.toString = $estr; return $x; };
fancy_table_util_CellContentImpl.LazyElement = function(fn) { var $x = ["LazyElement",1,fn]; $x.__enum__ = fancy_table_util_CellContentImpl; $x.toString = $estr; return $x; };
fancy_table_util_CellContentImpl.Element = function(e) { var $x = ["Element",2,e]; $x.__enum__ = fancy_table_util_CellContentImpl; $x.toString = $estr; return $x; };
var fancy_table_util__$CellContent_CellContent_$Impl_$ = {};
fancy_table_util__$CellContent_CellContent_$Impl_$.__name__ = true;
fancy_table_util__$CellContent_CellContent_$Impl_$.fromString = function(s) {
	return fancy_table_util_CellContentImpl.RawValue(s);
};
fancy_table_util__$CellContent_CellContent_$Impl_$.render = function(this1,className,t,row,col) {
	switch(this1[1]) {
	case 0:
		var v = this1[2];
		var doc = null;
		if(null == doc) {
			doc = window.document;
		}
		var el = doc.createElement("div");
		var _g1 = 0;
		var _g2 = [];
		while(_g1 < _g2.length) {
			var o = _g2[_g1];
			++_g1;
			el.setAttribute(o.name,o.value);
		}
		var _g11 = new haxe_ds_StringMap();
		if(__map_reserved["class"] != null) {
			_g11.setReserved("class",className);
		} else {
			_g11.h["class"] = className;
		}
		var attrs = _g11;
		if(null != attrs) {
			var attr = attrs.keys();
			while(attr.hasNext()) {
				var attr1 = attr.next();
				el.setAttribute(attr1,__map_reserved[attr1] != null ? attrs.getReserved(attr1) : attrs.h[attr1]);
			}
		}
		var children = null;
		if(null != children) {
			var _g21 = 0;
			while(_g21 < children.length) {
				var child = children[_g21];
				++_g21;
				el.appendChild(child);
			}
		}
		var textContent = v;
		if(null != textContent) {
			el.appendChild(doc.createTextNode(textContent));
		}
		return el;
	case 1:
		var fn = this1[2];
		return fn(t,row,col);
	case 2:
		var el1 = this1[2];
		return el1;
	}
};
var fancy_table_util_NestedData = function() { };
fancy_table_util_NestedData.__name__ = true;
fancy_table_util_NestedData.toRows = function(data,table,classes,indentation) {
	if(indentation == null) {
		indentation = 0;
	}
	return thx_Arrays.reduce(data,function(acc,curr) {
		if(curr.meta == null) {
			curr.meta = { };
		}
		if(curr.data == null) {
			curr.data = [];
		}
		if(curr.meta.height == null) {
			curr.meta.height = fancy_CellDimension.RenderSmart;
		}
		var newRow = new fancy_table_Row(table,curr.values,classes,curr.meta.height,curr.meta.classes,curr.meta.expanded,indentation);
		if(curr.data.length > 0) {
			var children = fancy_table_util_NestedData.toRows(curr.data,table,classes,indentation + 1);
			newRow.rows = newRow.rows.concat(children);
		}
		return thx_Arrays.append(acc,newRow);
	},[]);
};
var haxe_StackItem = { __ename__ : true, __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"] };
haxe_StackItem.CFunction = ["CFunction",0];
haxe_StackItem.CFunction.toString = $estr;
haxe_StackItem.CFunction.__enum__ = haxe_StackItem;
haxe_StackItem.Module = function(m) { var $x = ["Module",1,m]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.FilePos = function(s,file,line) { var $x = ["FilePos",2,s,file,line]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.Method = function(classname,method) { var $x = ["Method",3,classname,method]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.LocalFunction = function(v) { var $x = ["LocalFunction",4,v]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
var haxe_CallStack = function() { };
haxe_CallStack.__name__ = true;
haxe_CallStack.getStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = function(error,callsites) {
		var stack = [];
		var _g = 0;
		while(_g < callsites.length) {
			var site = callsites[_g];
			++_g;
			if(haxe_CallStack.wrapCallSite != null) {
				site = haxe_CallStack.wrapCallSite(site);
			}
			var method = null;
			var fullName = site.getFunctionName();
			if(fullName != null) {
				var idx = fullName.lastIndexOf(".");
				if(idx >= 0) {
					var className = HxOverrides.substr(fullName,0,idx);
					var methodName = HxOverrides.substr(fullName,idx + 1,null);
					method = haxe_StackItem.Method(className,methodName);
				}
			}
			stack.push(haxe_StackItem.FilePos(method,site.getFileName(),site.getLineNumber()));
		}
		return stack;
	};
	var a = haxe_CallStack.makeStack(e.stack);
	Error.prepareStackTrace = oldValue;
	return a;
};
haxe_CallStack.callStack = function() {
	try {
		throw new Error();
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		var a = haxe_CallStack.getStack(e);
		a.shift();
		return a;
	}
};
haxe_CallStack.exceptionStack = function() {
	return haxe_CallStack.getStack(haxe_CallStack.lastException);
};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s[1]) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s[2];
		b.b += "module ";
		b.b += m == null ? "null" : "" + m;
		break;
	case 2:
		var line = s[4];
		var file = s[3];
		var s1 = s[2];
		if(s1 != null) {
			haxe_CallStack.itemToString(b,s1);
			b.b += " (";
		}
		b.b += file == null ? "null" : "" + file;
		b.b += " line ";
		b.b += line == null ? "null" : "" + line;
		if(s1 != null) {
			b.b += ")";
		}
		break;
	case 3:
		var meth = s[3];
		var cname = s[2];
		b.b += cname == null ? "null" : "" + cname;
		b.b += ".";
		b.b += meth == null ? "null" : "" + meth;
		break;
	case 4:
		var n = s[2];
		b.b += "local function #";
		b.b += n == null ? "null" : "" + n;
		break;
	}
};
haxe_CallStack.makeStack = function(s) {
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$","");
		var _g = 0;
		while(_g < stack.length) {
			var line = stack[_g];
			++_g;
			if(rie10.match(line)) {
				var path = rie10.matched(1).split(".");
				var meth = path.pop();
				var file = rie10.matched(2);
				var line1 = Std.parseInt(rie10.matched(3));
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function" ? haxe_StackItem.LocalFunction() : meth == "Global code" ? null : haxe_StackItem.Method(path.join("."),meth),file,line1));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else {
		return s;
	}
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = true;
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe_ds_Option = { __ename__ : true, __constructs__ : ["Some","None"] };
haxe_ds_Option.Some = function(v) { var $x = ["Some",0,v]; $x.__enum__ = haxe_ds_Option; $x.toString = $estr; return $x; };
haxe_ds_Option.None = ["None",1];
haxe_ds_Option.None.toString = $estr;
haxe_ds_Option.None.__enum__ = haxe_ds_Option;
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			haxe_CallStack.lastException = e;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var thx_Arrays = function() { };
thx_Arrays.__name__ = true;
thx_Arrays.append = function(array,element) {
	array.push(element);
	return array;
};
thx_Arrays.getOption = function(array,i) {
	var value = array[i];
	if(null == value) {
		return haxe_ds_Option.None;
	} else {
		return haxe_ds_Option.Some(value);
	}
};
thx_Arrays.each = function(arr,effect) {
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		effect(arr[i]);
	}
};
thx_Arrays.any = function(arr,predicate) {
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(predicate(arr[i])) {
			return true;
		}
	}
	return false;
};
thx_Arrays.contains = function(array,element,eq) {
	if(null == eq) {
		return thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf(array,element) >= 0;
	} else {
		var _g1 = 0;
		var _g = array.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(eq(array[i],element)) {
				return true;
			}
		}
		return false;
	}
};
thx_Arrays.groupByAppend = function(arr,resolver,map) {
	var _g1 = 0;
	var _g = arr.length;
	while(_g1 < _g) {
		var i = _g1++;
		var v = arr[i];
		var key = resolver(v);
		var acc = map.get(key);
		if(null == acc) {
			map.set(key,[v]);
		} else {
			acc.push(v);
		}
	}
	return map;
};
thx_Arrays.reduce = function(array,f,initial) {
	var _g = 0;
	while(_g < array.length) {
		var v = array[_g];
		++_g;
		initial = f(initial,v);
	}
	return initial;
};
var thx_IAssertBehavior = function() { };
thx_IAssertBehavior.__name__ = true;
thx_IAssertBehavior.prototype = {
	__class__: thx_IAssertBehavior
};
var thx_DefaultAssertBehavior = function() {
};
thx_DefaultAssertBehavior.__name__ = true;
thx_DefaultAssertBehavior.__interfaces__ = [thx_IAssertBehavior];
thx_DefaultAssertBehavior.prototype = {
	success: function(pos) {
	}
	,fail: function(message,pos) {
		throw new thx_error_AssertError(message,pos);
	}
	,__class__: thx_DefaultAssertBehavior
};
var thx_Assert = function() { };
thx_Assert.__name__ = true;
thx_Assert.isTrue = function(cond,msg,pos) {
	if(cond) {
		thx_Assert.behavior.success(pos);
	} else {
		thx_Assert.behavior.fail(msg,pos);
	}
};
var thx_Either = { __ename__ : true, __constructs__ : ["Left","Right"] };
thx_Either.Left = function(value) { var $x = ["Left",0,value]; $x.__enum__ = thx_Either; $x.toString = $estr; return $x; };
thx_Either.Right = function(value) { var $x = ["Right",1,value]; $x.__enum__ = thx_Either; $x.toString = $estr; return $x; };
var thx_Error = function(message,stack,pos) {
	Error.call(this,message);
	this.message = message;
	if(null == stack) {
		try {
			stack = haxe_CallStack.exceptionStack();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			stack = [];
		}
		if(stack.length == 0) {
			try {
				stack = haxe_CallStack.callStack();
			} catch( e1 ) {
				haxe_CallStack.lastException = e1;
				stack = [];
			}
		}
	}
	this.stackItems = stack;
	this.pos = pos;
};
thx_Error.__name__ = true;
thx_Error.fromDynamic = function(err,pos) {
	if(js_Boot.__instanceof(err,thx_Error)) {
		return err;
	}
	return new thx_error_ErrorWrapper("" + Std.string(err),err,null,pos);
};
thx_Error.__super__ = Error;
thx_Error.prototype = $extend(Error.prototype,{
	toString: function() {
		return this.message + "\nfrom: " + this.getPosition() + "\n\n" + this.stackToString();
	}
	,getPosition: function() {
		return this.pos.className + "." + this.pos.methodName + "() at " + this.pos.lineNumber;
	}
	,stackToString: function() {
		return haxe_CallStack.toString(this.stackItems);
	}
	,__class__: thx_Error
});
var thx_Functions = function() { };
thx_Functions.__name__ = true;
thx_Functions.equality = function(a,b) {
	return a == b;
};
var thx_Ints = function() { };
thx_Ints.__name__ = true;
thx_Ints.canParse = function(s) {
	return thx_Ints.pattern_parse.match(s);
};
thx_Ints.parse = function(s,base) {
	if(null == base) {
		if(s.substring(0,2) == "0x") {
			base = 16;
		} else {
			base = 10;
		}
	}
	var v = parseInt(s,base);
	if(isNaN(v)) {
		return null;
	} else {
		return v;
	}
};
var thx_Iterators = function() { };
thx_Iterators.__name__ = true;
thx_Iterators.map = function(it,f) {
	var acc = [];
	var v = it;
	while(v.hasNext()) {
		var v1 = v.next();
		acc.push(f(v1));
	}
	return acc;
};
var thx_Maps = function() { };
thx_Maps.__name__ = true;
thx_Maps.tuples = function(map) {
	return thx_Iterators.map(map.keys(),function(key) {
		var this1 = { _0 : key, _1 : map.get(key)};
		return this1;
	});
};
var thx_Options = function() { };
thx_Options.__name__ = true;
thx_Options.map = function(option,callback) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return haxe_ds_Option.Some(callback(v));
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.flatMap = function(option,callback) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return callback(v);
	case 1:
		return haxe_ds_Option.None;
	}
};
thx_Options.cata = function(option,ifNone,f) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return f(v);
	case 1:
		return ifNone;
	}
};
thx_Options.cataf = function(option,ifNone,f) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return f(v);
	case 1:
		return ifNone();
	}
};
thx_Options.getOrElse = function(option,alt) {
	switch(option[1]) {
	case 0:
		var v = option[2];
		return v;
	case 1:
		return alt;
	}
};
thx_Options.orElse = function(option,alt) {
	switch(option[1]) {
	case 0:
		return option;
	case 1:
		return alt;
	}
};
thx_Options.each = function(o,f) {
	switch(o[1]) {
	case 0:
		var v = o[2];
		f(v);
		return o;
	case 1:
		return o;
	}
};
var thx__$ReadonlyArray_ReadonlyArray_$Impl_$ = {};
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.__name__ = true;
thx__$ReadonlyArray_ReadonlyArray_$Impl_$.indexOf = function(this1,el,eq) {
	if(null == eq) {
		eq = thx_Functions.equality;
	}
	var _g1 = 0;
	var _g = this1.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(eq(el,this1[i])) {
			return i;
		}
	}
	return -1;
};
var thx_Timer = function() { };
thx_Timer.__name__ = true;
thx_Timer.delay = function(callback,delayms) {
	var id = setTimeout(callback,delayms);
	return function() {
		thx_Timer.clear(id);
	};
};
thx_Timer.clear = function(id) {
	clearTimeout(id);
	return;
};
var thx_error_AssertError = function(msg,pos) {
	if(null == msg) {
		msg = "expected true";
	}
	thx_Error.call(this,msg,null,pos);
};
thx_error_AssertError.__name__ = true;
thx_error_AssertError.__super__ = thx_Error;
thx_error_AssertError.prototype = $extend(thx_Error.prototype,{
	__class__: thx_error_AssertError
});
var thx_error_ErrorWrapper = function(message,innerError,stack,pos) {
	thx_Error.call(this,message,stack,pos);
	this.innerError = innerError;
};
thx_error_ErrorWrapper.__name__ = true;
thx_error_ErrorWrapper.__super__ = thx_Error;
thx_error_ErrorWrapper.prototype = $extend(thx_Error.prototype,{
	__class__: thx_error_ErrorWrapper
});
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
Date.prototype.__class__ = Date;
Date.__name__ = ["Date"];
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
var __map_reserved = {}
var scope = ("undefined" !== typeof window && window) || ("undefined" !== typeof global && global) || Function("return this")();
if(!scope.setImmediate) {
	scope.setImmediate = function(callback) {
		scope.setTimeout(callback,0);
	};
}
var lastTime = 0;
var vendors = ["webkit","moz"];
var x = 0;
while(x < vendors.length && !scope.requestAnimationFrame) {
	scope.requestAnimationFrame = scope[vendors[x] + "RequestAnimationFrame"];
	scope.cancelAnimationFrame = scope[vendors[x] + "CancelAnimationFrame"] || scope[vendors[x] + "CancelRequestAnimationFrame"];
	++x;
}
if(!scope.requestAnimationFrame) {
	scope.requestAnimationFrame = function(callback1) {
		var currTime = new Date().getTime();
		var timeToCall = Math.max(0,16 - (currTime - lastTime));
		var id = scope.setTimeout(function() {
			callback1(currTime + timeToCall);
		},timeToCall);
		lastTime = currTime + timeToCall;
		return id;
	};
}
if(!scope.cancelAnimationFrame) {
	scope.cancelAnimationFrame = function(id1) {
		scope.clearTimeout(id1);
	};
}
if(typeof(scope.performance) == "undefined") {
	scope.performance = { };
}
if(typeof(scope.performance.now) == "undefined") {
	var nowOffset = new Date().getTime();
	if(scope.performance.timing && scope.performance.timing.navigationStart) {
		nowOffset = scope.performance.timing.navigationStart;
	}
	var now = function() {
		return new Date() - nowOffset;
	};
	scope.performance.now = now;
}
dots_Query.doc = document;
fancy_table_KeyEvent.isMac = window.navigator.platform.toUpperCase().indexOf("MAC") >= 0;
js_Boot.__toStr = ({ }).toString;
thx_Assert.behavior = new thx_DefaultAssertBehavior();
thx_Ints.pattern_parse = new EReg("^[ \t\r\n]*[+-]?(\\d+|0x[0-9A-F]+)","i");
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
